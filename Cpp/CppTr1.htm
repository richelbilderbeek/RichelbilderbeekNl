<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>TR1</title>
  <meta name="description" content="C++ TR1"/>
  <meta name="keywords" content="C++ TR1 Technical Report 1 code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <img src="PicCppTr1.png" alt="TR1"/> <a href="CppTr1.htm">TR1</a></h1>
<p>&nbsp;</p>
<p><a href="CppTr1.htm">TR1 (an abbreviation of 'Technical Report 1')</a> is a document proposing 
<a href="CppLibrary.htm">library</a> extensions to the <a href="Cpp98.htm">C++98</a> 
<a href="CppLibrary.htm">library</a>.</p>
<p>&nbsp;</p>
<p><a href="CppTr2.htm">TR2</a> will be a document proposing 
<a href="CppLibrary.htm">library</a> extensions to the <a href="Cpp11.htm">C++11</a> 
<a href="CppLibrary.htm">library</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>List of <a href="CppTr1.htm">TR1</a> <a href="CppHeaderFile.htm">header files</a></h2>
<p>&nbsp;</p>
<p>Found in '/usr/include/c++/4.7/tr1':</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppArrayH.htm">array</a></li>
  <li><a href="CppCcomplexH.htm">ccomplex</a></li>
  <li><a href="CppCctypeH.htm">cctype</a></li>
  <li><a href="CppCfenvH.htm">cfenv</a></li>
  <li><a href="CppCfloatH.htm">cfloat</a></li>
  <li><a href="CppCinttypesH.htm">cinttypes</a></li>
  <li><a href="CppClimitsH.htm">climits</a></li>
  <li><a href="CppCmathH.htm">cmath</a></li>
  <li><a href="CppComplexH.htm">complex</a></li>
  <li><a href="CppCstdargH.htm">cstdarg</a></li>
  <li><a href="CppCstdboolH.htm">cstdbool</a></li>
  <li><a href="CppCstdintH.htm">cstdint</a></li>
  <li><a href="CppCstdioH.htm">cstdio</a></li>
  <li><a href="CppCstdlibH.htm">cstdlib</a></li>
  <li><a href="CppCtgmathH.htm">ctgmath</a></li>
  <li><a href="CppCtimeH.htm">ctime</a></li>
  <li><a href="CppCwcharH.htm">cwchar</a></li>
  <li><a href="CppCctypeH.htm">cwctype</a></li>
  <li><a href="CppFunctionalH.htm">functional</a></li>
  <li><a href="CppMemoryH.htm">memory</a></li>
  <li><a href="CppRandomH.htm">random</a></li>
  <li><a href="CppRegexH.htm">regex</a></li>
  <li><a href="CppTupleH.htm">tuple</a></li>
  <li><a href="CppType_traitsH.htm">type_traits</a></li>
  <li><a href="CppUnordered_mapH.htm">unordered_map</a></li>
  <li><a href="CppUnordered_setH.htm">unordered_set</a></li>
  <li><a href="CppUtilityH.htm">utility</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Example</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="CppTr1.zip">Donwload the Qt Creator project 'CppTr1' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 12.10 (quantal)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 2.5.2</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.7.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.7.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: CppTr1.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="CppTr1.pro" border = "1"><tr><td><code>
TEMPLATE = app<br/>
CONFIG += console<br/>
CONFIG -= qt<br/>
SOURCES += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> WOULD_<a href="CppTr1.htm">TR1</a>_REGEX_BE_COMPLETE<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppTr1.htm">tr1</a>/regex&gt; <a href="CppComment.htm">//</a><a href="CppTr1.htm">std::tr1</a>::regex<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppTr1.htm">tr1</a>/array&gt; <a href="CppComment.htm">//</a><a href="CppTr1.htm">std::tr1</a>::array<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppTr1.htm">tr1</a>/<a href="CppMemory.htm">memory</a>&gt; <a href="CppComment.htm">//</a><a href="CppShared_ptr.htm">std::tr1::shared_ptr</a><br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTr1.htm">std::tr1</a>::array<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppTr1.htm">std::tr1</a>::array&lt;<b><a href="CppInt.htm">int</a></b>,3&gt; w <a href="CppOperatorAssign.htm">=</a> {{ 0,1 }}; <a href="CppComment.htm">//</a>Does <a href="CppCompile.htm">compile</a>: too few elements is not checked in assignment<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppTr1.htm">std::tr1</a>::array&lt;<b><a href="CppInt.htm">int</a></b>,3&gt; x <a href="CppOperatorAssign.htm">=</a> {{ 0,1,2,3 }}; <a href="CppComment.htm">//</a>Does not <a href="CppCompile.htm">compile</a>: too m<a href="CppAny.htm">any</a> elements is checked in assignment<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTr1.htm">std::tr1</a>::array&lt;<b><a href="CppInt.htm">int</a></b>,3&gt; v <a href="CppOperatorAssign.htm">=</a> {{ 0,1,2 }}; <a href="CppComment.htm">//</a>Note the <b><a href="CppDouble.htm">double</a></b> braces<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppStatic_assert.htm">static_assert</a></b>(v.size() <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> 3,""); <a href="CppComment.htm">//</a>Not allowed<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[1] <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> 1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTr1.htm">std::tr1</a>::regex<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> WOULD_<a href="CppTr1.htm">TR1</a>_REGEX_BE_COMPLETE<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Define how a dutch zip code is formatted<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTr1.htm">std::tr1</a>::regex dutch_zip_code("\\d{4}\\s[A-Z]{2}");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check <b><a href="CppIf.htm">if</a></b> the regex works properly<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppTr1.htm">std::tr1</a>::regex_match("1234 AB",dutch_zip_code)<a href="CppOperatorEqual.htm">==</a><b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppTr1.htm">std::tr1</a>::regex_match("1234 ab",dutch_zip_code)<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppTr1.htm">std::tr1</a>::regex_match("1234ab",dutch_zip_code)<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Define a sentence with a Dutch zip code in it<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "My Dutch zip code is 1234 AB.";<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Show how <a href="CppTr1.htm">std::tr1</a>::regex_match and <a href="CppTr1.htm">std::tr1</a>::regex_search work<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppTr1.htm">std::tr1</a>::regex_match(s,dutch_zip_code)<a href="CppOperatorEqual.htm">==</a><b><a href="CppFalse.htm">false</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "the <a href="CppString.htm">std::string</a> does not match a dutch zip code");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppTr1.htm">std::tr1</a>::regex_search(s,dutch_zip_code)<a href="CppOperatorEqual.htm">==</a><b><a href="CppTrue.htm">true</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "but the <a href="CppString.htm">std::string</a> does contain a dutch zip code");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Show how to obtain a Dutch zip code from a <a href="CppString.htm">std::string</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a>* <b><a href="CppConst.htm">const</a></b> <a href="CppComment.htm">*/</a> <a href="CppTr1.htm">std::tr1</a>::sregex_<a href="CppIterator.htm">iterator</a> i(s.begin(),s.end(),dutch_zip_code);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> t <a href="CppOperatorAssign.htm">=</a> (*i).str();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(t<a href="CppOperatorEqual.htm">==</a>"1234 AB");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppShared_ptr.htm">std::tr1::shared_ptr</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppShared_ptr.htm">std::tr1::shared_ptr</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; p(<b><a href="CppNew.htm">new</a></b> <b><a href="CppInt.htm">int</a></b>(123));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*p <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> 123);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppShared_ptr.htm">std::tr1::shared_ptr</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; q <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(q);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*p <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> *q);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;*p <a href="CppOperatorAssign.htm">=</a> 234;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*q <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> 234);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="http://en.wikipedia.org/wiki/C%2B%2B_Technical_Report_1">Wikipedia page about TR1</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
