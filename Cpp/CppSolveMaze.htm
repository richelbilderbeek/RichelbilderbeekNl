<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>SolveMaze</title>
  <meta name="description" content="C++ SolveMaze"/>
  <meta name="keywords" content="C++ SolveMaze solve maze STL Qt Builder code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppSolveMaze.htm">SolveMaze</a></h1>
<p>&nbsp;</p>
<p><a href="CppMaze.htm">Maze</a> <a href="CppCodeSnippets.htm">code snippet</a> to solves a maze, for example the mazes created by <a href="CppCreateMaze.htm">CreateMaze</a>/<a href="CppCreateSloppyMaze.htm">CreateSloppyMaze</a>. Relies heavily on the <a href="CppAlgorithm.htm">algorithms</a> <a href="CppGetMazeDistances.htm">GetMazeDistances</a> and <a href="CppGetDistancesPath.htm">GetDistancesPath</a>. Note that the code below is not an efficient <a href="CppAlgorithm.htm">algorithm</a>: the <a href="CppVector.htm">std::vector</a> created by <a href="CppGetMazeDistances.htm">GetMazeDistances</a> remains the same, as long as the maze remains the same. When the maze does remain the same, I'd suggest to calculate the maze distances once and store it, from then on calling <a href="CppGetDistancesPath.htm">GetDistancesPath</a> only.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppSolveMaze.htm">SolveMaze</a>.htm<br/>
<a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; <a href="CppSolveMaze.htm">SolveMaze</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt;&amp; maze,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x2,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y2)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume maze is square<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze[0].size() <a href="CppOperatorEqual.htm">==</a> maze.size());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze[y1][x1] <a href="CppOperatorEqual.htm">==</a> 0); <a href="CppComment.htm">//</a>Assume starting <a href="CppPointer.htm">point</a> is no wall<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(maze[y2][x2] <a href="CppOperatorEqual.htm">==</a> 0); <a href="CppComment.htm">//</a>Assume end <a href="CppPointer.htm">point</a> is no wall<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; distances(<a href="CppGetMazeDistances.htm">GetMazeDistances</a>(maze,x2,y2));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppGetDistancesPath.htm">GetDistancesPath</a>(distances,x1,y1);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
