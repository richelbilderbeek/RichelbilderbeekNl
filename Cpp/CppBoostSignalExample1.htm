<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Boost signal example 1: comparing Boost and Qt</title>
  <meta name="description" content="C++ Boost signal example 1: comparing Boost and Qt"/>
  <meta name="keywords" content="C++ Boost signal example 1: comparing Boost and Qt code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppBoostSignalExample1.htm">Boost signal example 1: comparing Boost and Qt</a></h1>
<p>&nbsp;</p>
<p>This <a href="CppBoostSignal.htm">Boost signal</a> example shows
both the use of <a href="CppBoostSignal.htm">Boost signals</a> and <a href="CppQtSignal.htm">Qt signals</a>.</p>
<p>&nbsp;</p>
<p>The <a href="CppArticle.htm">article</a> <a href="CppFromQtSignalToBoostSignal.htm">From Qt signal to Boost signal</a>
describes why and how to move from using <a href="CppQtSignal.htm">Qt signals</a> to using 
<a href="CppBoostSignal.htm">Boost signals</a>.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppBoostSignalExample1.zip">Download the Qt Creator project 'CppBoostSignalExample1' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicUbuntu.png" alt="Ubuntu"/> <a href="CppUbuntu.htm">Ubuntu</a> 10.10 (maverick)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 2.0.0 </li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.4.5</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicBoost.png" alt="Boost"/> <a href="CppBoost.htm">Boost</a>: version 1.42</li>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 4.7.0 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.4.5</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: CppSignal.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
#-------------------------------------------------<br/>
#<br/>
# Project created by QtCreator 2010-12-29T13:23:42<br/>
#<br/>
#-------------------------------------------------<br/>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += core<br/>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -= gui<br/>
TARGET = CppSignal<br/>
CONFIG&nbsp;&nbsp; += console<br/>
CONFIG&nbsp;&nbsp; -= app_bundle<br/>
TEMPLATE = app<br/>
SOURCES += main.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;emitter.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;receiver.cpp<br/>
HEADERS += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;emitter.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;receiver.h<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>emitter.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<b><a href="CppEmit.htm">emit</a></b>ter.h"<br/>
<br/>
<a href="CppQt.htm">Qt</a><a href="CppEmit.htm">Emit</a>ter::<a href="CppQt.htm">Qt</a><a href="CppEmit.htm">Emit</a>ter(<a href="CppQObject.htm">QObject</a> *parent) :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>(parent)<br/>
{<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a><a href="CppEmit.htm">Emit</a>ter::Do<a href="CppEmit.htm">Emit</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppQt.htm">Qt</a><a href="CppEmit.htm">Emit</a>ter: <b><a href="CppEmit.htm">emit</a></b>ting <a href="CppSignal.htm">signal</a>\n";<br/>
&nbsp;&nbsp;<b><a href="CppEmit.htm">emit</a></b> <a href="CppSignal.htm">signal</a>_<b><a href="CppEmit.htm">emit</a></b>();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppEmit.htm">Emit</a>ter::Do<a href="CppEmit.htm">Emit</a>()<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppSignal.htm">signal</a>();<br/>
&nbsp;&nbsp;<a href="CppClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppEmit.htm">Emit</a>ter: <b><a href="CppEmit.htm">emit</a></b>ting <a href="CppSignal.htm">signal</a>\n";<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>emitter.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> EMITTER_H<br/>
<a href="CppDefine.htm">#define</a> EMITTER_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQObject.htm">QObject</a>&gt;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a><a href="CppEmit.htm">Emit</a>ter : <b><a href="CppPublic.htm">public</a></b> <a href="CppQObject.htm">QObject</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a><a href="CppEmit.htm">Emit</a>ter(<a href="CppQObject.htm">QObject</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Do<a href="CppEmit.htm">Emit</a>();<br/>
<br/>
<b><a href="CppQtSignals.htm">signals</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> <a href="CppSignal.htm">signal</a>_<b><a href="CppEmit.htm">emit</a></b>();<br/>
};<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<b><a href="CppQtSignals.htm">signals</a></b>2.hpp&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppEmit.htm">Emit</a>ter<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<b><a href="CppQtSignals.htm">signals</a></b>2::<a href="CppSignal.htm">signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_<a href="CppSignal.htm">signal</a>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Do<a href="CppEmit.htm">Emit</a>();<br/>
};<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppOperatorDivide.htm">/</a><a href="CppOperatorDivide.htm">/</a> EMITTER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<b><a href="CppQtSignals.htm">signals</a></b>2.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<b><a href="CppEmit.htm">emit</a></b>ter.h"<br/>
<a href="CppInclude.htm">#include</a> "receiver.h"<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>The <a href="CppQt.htm">Qt</a> way<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="CppEmit.htm">Emit</a>ter e;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Receiver r;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(&amp;e,<a href="CppSignalMacro.htm">SIGNAL</a>(<a href="CppSignal.htm">signal</a>_<b><a href="CppEmit.htm">emit</a></b>()),&amp;r,<a href="CppSLOT.htm">SLOT</a>(OnReceive()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;e.Do<a href="CppEmit.htm">Emit</a>();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>The <a href="CppBoost.htm">Boost</a> way<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEmit.htm">Emit</a>ter e;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Receiver r;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;e.m_<a href="CppSignal.htm">signal</a>.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;Receiver::OnReceive,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;e.Do<a href="CppEmit.htm">Emit</a>();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>receiver.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "receiver.h"<br/>
<br/>
<a href="CppQt.htm">Qt</a>Receiver::<a href="CppQt.htm">Qt</a>Receiver(<a href="CppQObject.htm">QObject</a> *parent) :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>(parent)<br/>
{<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppQt.htm">Qt</a>Receiver::OnReceive()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppQt.htm">Qt</a>Receiver: received <a href="CppSignal.htm">signal</a>\n";<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> Receiver::OnReceive()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Receiver: received <a href="CppSignal.htm">signal</a>\n";<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>receiver.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> RECEIVER_H<br/>
<a href="CppDefine.htm">#define</a> RECEIVER_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQObject.htm">QObject</a>&gt;<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>Receiver : <b><a href="CppPublic.htm">public</a></b> <a href="CppQObject.htm">QObject</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>Receiver(<a href="CppQObject.htm">QObject</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
<b><a href="CppQtSignals.htm">signals</a></b>:<br/>
<br/>
<b><a href="CppPublic.htm">public</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnReceive();<br/>
};<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<b><a href="CppQtSignals.htm">signals</a></b>2.hpp&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Receiver<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnReceive();<br/>
};<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppOperatorDivide.htm">/</a><a href="CppOperatorDivide.htm">/</a> RECEIVER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
