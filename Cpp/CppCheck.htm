<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Check</title>
  <meta name="description" content="C++ Check"/>
  <meta name="keywords" content="C++ check checks code snippet snippets checking"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppCheck.htm">Check</a></h1>
<p>&nbsp;</p>
<p><a href="CppCodeSnippets.htm">Code snippets</a> that let you check something. For example, if you <b>can</b> <a href="CppConvert.htm">convert</a> a <a href="CppDataType.htm">data type</a> to another.</p>
<p>&nbsp;</p>
<ol>
  <li><a href="CppAllAboutEqual.htm">AllAboutEqual, check if all doubles in a std::vector are about equal</a></li>
  <li><a href="CppAnsiIsDouble.htm">AnsiIsDouble, check if AnsiString can be converted to double</a></li>
  <li><a href="CppAnsiIsInt.htm">AnsiIsInt, check if AnsiString can be converted to integer</a></li>
  <li><a href="CppAssert.htm">Assert</a></li>
  <li><a href="CppIsSorted.htm">Check if a container is sorted, IsSorted</a>
  <li><a href="CppAllAboutEqual.htm">Check if all doubles in a std::vector are about equal, AllAboutEqual</a></li>
  <li><a href="CppCanCast.htm">CanCast, check if std::string can be converted to any data type</a></li>
  <li><a href="CppCanLexicalCast.htm">CanLexicalCast, check if std::string can be converted to any data type</a></li>
  <li><a href="CppAnsiIsDouble.htm">Check if AnsiString can be converted to double, AnsiIsDouble</a></li>
  <li><a href="CppAnsiIsInt.htm">Check if AnsiString can be converted to integer, AnsiIsInt</a></li>
  <li><a href="CppHexStrIsInt.htm">Check if hexadecimal std::string can be converted to integer</a></li>
  <li><a href="CppCanCast.htm">Check if std::string can be converted to any data type, CanCast</a></li>
  <li><a href="CppCanLexicalCast.htm">Check if std::string can be converted to any data type, CanLexicalCast</a></li>
  <li><a href="CppIsDouble.htm">Check if std::string can be converted to double, IsDouble</a></li>
  <li><a href="CppIsInt.htm">Check if std::string can be converted to integer, IsInt</a></li>
  <li><a href="CppWideIsDouble.htm">Check if WideString can be converted to double, WideIsDouble</a></li>
  <li><a href="CppWideIsInt.htm">Check if WideString can be converted to integer, WideIsInt</a></li>
  <li><a href="CppGetMaxDouble.htm">GetMaxDouble</a>, get the maximal double value</li>
  <li><a href="CppGetMaxInt.htm">GetMaxInt</a>, get the maximal integer value</li>
  <li><a href="CppGetMaxLong.htm">GetMaxLong</a>, get the maximal long value</li>
  <li><a href="CppIsDouble.htm">IsDouble, check if std::string can be converted to double</a></li>
  <li><a href="CppIsInt.htm">IsInt, check if std::string can be converted to integer</a></li>
  <li><a href="CppIsSorted.htm">IsSorted, check if a container is sorted</a>
  <li><a href="CppWideIsDouble.htm">WideIsDouble, check if WideString can be converted to double</a></li>
  <li><a href="CppWideIsInt.htm">WideIsInt, check if WideString can be converted to integer</a></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
