<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>operator+</title>
  <meta name="description" content="C++ operator+"/>
  <meta name="keywords" content="C++ operator+ plus operator"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppOperatorPlus.htm">operator+</a></h1>
<p>&nbsp;</p>
<p><a href="CppOperatorPlus.htm">operator+</a> is the <a href="CppOperator.htm">operator</a> for adding.</p>
<p>&nbsp;</p>
<p>The following line of code calls <a href="CppOperatorPlus.htm">operator+</a> to add the values of two <a href="CppInt.htm">integers</a>:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> 3 <a href="CppOperatorPlus.htm">+</a> 4; <br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p><a href="CppOperatorPlus.htm">operator+</a> is encapsulated by the <a href="CppFunctor.htm">functor</a> <a href="CppPlus.htm">std::plus</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Example function to overload operator+</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
&nbsp;<br/>
<b><a href="CppStruct.htm">struct</a></b> Test<br/>
{<br/>
&nbsp;&nbsp;Test(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> 0) : mX(x) {}<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> mX;<br/>
};<br/>
&nbsp;<br/>
<b><a href="CppConst.htm">const</a></b> Test <b><a href="CppOperatorPlus.htm">operator+</a></b>(<b><a href="CppConst.htm">const</a></b> Test&amp; lhs, <b><a href="CppConst.htm">const</a></b> Test&amp; rhs)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Test( lhs.mX <a href="CppOperatorPlus.htm">+</a> rhs.mX );<br/>
}<br/>
&nbsp;<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test t1(3);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test t2(4);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Test t3 <a href="CppOperatorAssign.htm">=</a> t1 <a href="CppOperatorPlus.htm">+</a> t2;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(t3.mX <a href="CppOperatorEqual.htm">==</a> 7);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
