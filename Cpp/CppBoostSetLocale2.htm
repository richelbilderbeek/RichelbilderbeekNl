<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>BoostSetLocale2</title>
  <meta name="description" content="C++ BoostSetLocale2"/>
  <meta name="keywords" content="C++ BoostSetLocale2 "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppBoostSetLocale2.htm">BoostSetLocale2</a></h1>
<p>&nbsp;</p>
<!-- No CodeToHtmlInfo about this class with page name CppBoostSetLocale2-->
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 15.04 (vivid)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.1.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.9.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicBoost.png" alt="Boost"/> <a href="CppBoost.htm">Boost</a>: version 1.55</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.9.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./CppBoostSetLocale2/CppBoostSetLocale2.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppBoostSetLocale2/CppBoostSetLocale2.pro" border = "1"><tr><td><code>
include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri) #Or use the code below<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri) #Or use the code below<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
<a href="CppQmakeLibs.htm">LIBS</a> += -lboost_locale<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppBoostSetLocale2/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppBoostSetLocale2/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/locale.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/math/constants/constants.hpp&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Current locale: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStd.htm">std</a>::locale().name() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStd.htm">std</a>::locale().name() <a href="CppOperatorEqual.htm">==</a> "C");<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>It was observed in a <a href="CppQt.htm">Qt</a> Desktop environment that<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>pi <a href="CppConvert.htm">convert</a>ed to a string as '3,14...', probably because<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>some locale was set to Dutch.<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>In a console environment, however, it appears not to fail, as <b><a href="CppIf.htm">if</a></b><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>there is no locale set<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pi <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::math::constants::pi&lt;<b><a href="CppDouble.htm">double</a></b>&gt;();<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::locale::generator gen;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Default (which is English)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::locale::global(gen(""));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Current locale: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStd.htm">std</a>::locale().name() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStd.htm">std</a>::locale().name() <a href="CppOperatorEqual.htm">==</a> "*");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> pi_str_<a href="CppBoost.htm">boost</a>{<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(pi)};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pi_str_<a href="CppBoost.htm">boost</a>[1] <a href="CppOperatorEqual.htm">==</a> '.' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Default (English) please");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>English (which is the same as the <b><a href="CppDefault.htm">default</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::locale::global(gen("en_US.UTF-8"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Current locale: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStd.htm">std</a>::locale().name() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStd.htm">std</a>::locale().name() <a href="CppOperatorEqual.htm">==</a> "*");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> pi_str_<a href="CppBoost.htm">boost</a>{<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(pi)};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pi_str_<a href="CppBoost.htm">boost</a>[1] <a href="CppOperatorEqual.htm">==</a> '.' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "English please");<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>German<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::locale::global(<a href="CppStd.htm">std</a>::locale("de_DE.UTF-8"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStd.htm">std</a>::locale().name() <a href="CppOperatorEqual.htm">==</a> "*");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Current locale: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStd.htm">std</a>::locale().name() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> pi_str_<a href="CppBoost.htm">boost</a>{<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(pi)};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pi_str_<a href="CppBoost.htm">boost</a>[1] <a href="CppOperatorEqual.htm">==</a> ',' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "German please");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppStdRuntime_error.htm">std::runtime_error</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "?German unknown locale" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Dutch<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> my_locale <a href="CppOperatorAssign.htm">=</a> <a href="CppStd.htm">std</a>::locale("nl_NL.UTF-8");<br/>
&nbsp;&nbsp;<a href="CppStd.htm">std</a>::locale::global(my_locale);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppStd.htm">std</a>::locale().name() <a href="CppOperatorEqual.htm">==</a> "nl_NL.UTF-8");<br/>
&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Current locale: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStd.htm">std</a>::locale().name() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a> pi_str_<a href="CppBoost.htm">boost</a>{<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppStdString.htm">std::string</a>&gt;(pi)};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pi_str_<a href="CppBoost.htm">boost</a>[1] <a href="CppOperatorEqual.htm">==</a> ',' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Dutch please");<br/>
&nbsp;&nbsp;<a href="CppStdCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Pi in Dutch (should have a comma): " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> pi_str_<a href="CppBoost.htm">boost</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppStdEndl.htm">std::endl</a>;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
