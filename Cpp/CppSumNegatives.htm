<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>SumNegatives</title>
  <meta name="description" content="C++ SumNegatives"/>
  <meta name="keywords" content="C++ SumNegatives sum negative values in a vector container math code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppSumNegatives.htm">SumNegatives</a></h1>
<p>&nbsp;</p>
<p><a href="CppSumNegatives.htm">SumNegatives</a> is a <a href="CppMath.htm">math</a> <a href="CppCodeSnippets.htm">code snippet</a> to sum all negative elements in a <a href="CppContainer.htm">container</a>.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/CppAccumulate_<b><a href="CppIf.htm">if</a></b>.htm<br/>
<b><a href="CppTemplate.htm">template</a></b><br/>
&lt;<br/>
&nbsp;&nbsp;<b><a href="CppTypename.htm">typename</a></b> InputIterator,<br/>
&nbsp;&nbsp;<b><a href="CppTypename.htm">typename</a></b>  ElementType,<br/>
&nbsp;&nbsp;<b><a href="CppTypename.htm">typename</a></b>  Predicate<br/>
&gt;<br/>
<b><a href="CppConst.htm">const</a></b> ElementType <a href="CppAccumulate_if.htm">accumulate_if</a>(<br/>
&nbsp;&nbsp;InputIterator first,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> InputIterator last,<br/>
&nbsp;&nbsp;ElementType init,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Predicate predicate)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (; first <a href="CppOperatorNotEqual.htm">!=</a> last; <a href="CppOperatorIncrement.htm">++</a>first)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (predicate(*first)) init <a href="CppOperatorPlusAssign.htm">+=</a> *first;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init;<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppSumNegatives.htm">SumNegatives</a>.htm<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppSumNegatives.htm">SumNegatives</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ::<a href="CppAccumulate_if.htm">accumulate_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;0.0,<a href="CppBind2nd.htm">std::bind2nd</a>(<a href="CppLess.htm">std::less</a>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(),0.0));<br/>
}<br/>
<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
