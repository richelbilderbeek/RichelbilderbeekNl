<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>delegation</title>
  <meta name="description" content="C++ C++0x delegation"/>
  <meta name="keywords" content="C++ C++0x delegation code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppDelegation.htm">delegation</a></h1>
<p>&nbsp;</p>
<p><a href="CppDelegation.htm">delegation</a> is a technique
that can be used, depending
on the <a href="CppStandard.htm">standard</a> used:</p>
<ul>
  <li>
    <img src="PicCpp98.png" alt="C++98"/> 
    <a href="CppDelegation.htm">delegation</a> in the <a href="Cpp98.htm">C++98</a> <a href="CppStandard.htm">standard</a>
  </li>
  <li>
    <img src="PicCpp11.png" alt="C++11"/> 
    <a href="CppDelegation.htm">delegation</a> in the <a href="Cpp11.htm">C++11</a> <a href="CppStandard.htm">standard</a>
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicCpp98.png" alt="C++98"/> 
  <a href="CppDelegation.htm">delegation</a> in the <a href="Cpp98.htm">C++98</a> <a href="CppStandard.htm">standard</a>
</h2>
<p>&nbsp;</p>
<p><a href="CppDelegation.htm">Delegation</a> is not supported in <a href="Cpp98.htm">C++98</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicCpp11.png" alt="C++11"/> 
  <a href="CppDelegation.htm">delegation</a> in the <a href="Cpp11.htm">C++11</a> <a href="CppStandard.htm">standard</a>
</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="CppDelegation.zip">Download the Qt Creator project 'CppDelegation' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p><a href="CppDelegation.htm">Delegation</a> is the technique of <a href="CppConstructor.htm">constructors</a>
calling each other:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<b><a href="CppStruct.htm">struct</a></b> MyClass<br/>
{<br/>
&nbsp;&nbsp;MyClass() : MyClass(42) {}<br/>
&nbsp;&nbsp;MyClass(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x) : m_x(x) {}<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_x;<br/>
};<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;MyClass a;<br/>
&nbsp;&nbsp;MyClass b(1);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>Or a more elaborate example:</p>
<p>&nbsp;</p>

<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> MyClass<br/>
{<br/>
&nbsp;&nbsp;MyClass() : MyClass(42) { <a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppDefaultConstructor.htm">Default constructor</a>\n"; }<br/>
&nbsp;&nbsp;MyClass(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x) : MyClass(x,x*x) { <a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "<a href="CppConstructor.htm">Constructor</a> with one argument\n";}<br/>
&nbsp;&nbsp;MyClass(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> y) : m_x(x), m_y(y) { <a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Setting the two arguments\n";}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_x;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_y;<br/>
};<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Creating an <a href="CppInstance.htm">instance</a> of MyClass without arguments\n";<br/>
&nbsp;&nbsp;MyClass a;<br/>
&nbsp;&nbsp;<a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "\nCreating an <a href="CppInstance.htm">instance</a> of MyClass with one argument\n";<br/>
&nbsp;&nbsp;MyClass b(1);<br/>
&nbsp;&nbsp;<a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "\nCreating an <a href="CppInstance.htm">instance</a> of MyClass with two arguments\n";<br/>
&nbsp;&nbsp;MyClass c(1,2);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>Producing the screen output:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
Creating an <a href="CppInstance.htm">instance</a> of MyClass without arguments<br/>
Setting the two arguments<br/>
<a href="CppConstructor.htm">Constructor</a> with one argument<br/>
<a href="CppDefaultConstructor.htm">Default constructor</a><br/>
<br/>
Creating an <a href="CppInstance.htm">instance</a> of MyClass with one argument<br/>
Setting the two arguments<br/>
<a href="CppConstructor.htm">Constructor</a> with one argument<br/>
<br/>
Creating an <a href="CppInstance.htm">instance</a> of MyClass with two arguments<br/>
Setting the two arguments<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<ul>
  <li><a href="CppDelegation.zip">Download the Qt Creator project 'CppDelegation' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
