<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>DoubleToStr</title>
  <meta name="description" content="C++ DoubleToStr"/>
  <meta name="keywords" content="C++ DoubleToStr double to 2 string str std::string C++0x boost std::to_string to_string boost::lexical_cast lexical_cast"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppDoubleToStr.htm">DoubleToStr</a></h1>
<p>&nbsp;</p>
<p><a href="CppDoubleToStr.htm">DoubleToStr</a> is a <a href="CppCodeSnippets.htm">code snippet</a> to 
<a href="CppConvert.htm">convert</a> an <a href="CppDouble.htm">double</a> to <a href="CppString.htm">std::string</a>. 
To <a href="CppConvert.htm">convert</a> a <a href="CppString.htm">std::string</a> to <a href="CppDouble.htm">double</a>, 
use <a href="CppStrToDouble.htm">StrToDouble</a>.</p>
<p>&nbsp;</p>
<p><a href="CppDoubleToStr.htm">DoubleToStr</a> has multiple versions:</p>
<ul>
  <li>
    <img src="PicCpp98.png" alt="C++98"/><img src="PicStl.png" alt="STL"/> 
    <a href="CppDoubleToStr.htm">DoubleToStr</a> using the <a href="Cpp98.htm">C++98</a> and the <a href="CppStl.htm">STL</a>
  </li>
  <li>
    <img src="PicCpp98.png" alt="C++98"/><img src="PicBoost.png" alt="Boost"/>
    <a href="CppDoubleToStr.htm">DoubleToStr</a> using the <a href="Cpp98.htm">C++98</a> and the <a href="CppBoost.htm">Boost</a> <a href="CppLibrary.htm">library</a>
  </li>
  <li>
    <img src="PicCpp11.png" alt="C++11"/><img src="PicStl.png" alt="STL"/>
    <a href="CppDoubleToStr.htm">DoubleToStr</a> using the <a href="Cpp11.htm">C++11</a> and the <a href="CppStl.htm">STL</a>
  </li>
</ul>
<p>&nbsp;</p>
<ul>
  <li><a href="CppDoubleToStr.zip">Download the Qt Creator project 'CppDoubleToStr' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicCpp98.png" alt="C++98"/><img src="PicStl.png" alt="STL"/> 
  <a href="CppDoubleToStr.htm">DoubleToStr</a> using the <a href="Cpp98.htm">C++98</a> and the <a href="CppStl.htm">STL</a>
</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/CppDoubleToStr.htm<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppDoubleToStr.htm">DoubleToStr</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppOstringstream.htm">std::ostringstream</a> s;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!(s &lt;&lt; x)) <b><a href="CppThrow.htm">throw</a></b> <a href="CppLogic_error.htm">std::logic_error</a>("DoubleToStr failed");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s.str();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>The <a href="CppCodeSnippets.htm">code snippet</a> above was modified from <a href="http://www.parashift.com/c++-faq-lite">the C++ FAQ Lite</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicCpp98.png" alt="C++98"/><img src="PicBoost.png" alt="Boost"/>
  <a href="CppDoubleToStr.htm">DoubleToStr</a> using the <a href="Cpp98.htm">C++98</a> and the <a href="CppBoost.htm">Boost</a> <a href="CppLibrary.htm">library</a>
</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;boost/lexical_cast.hpp&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/CppDoubleToStr.htm<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppDoubleToStr.htm">DoubleToStr</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(x);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicCpp11.png" alt="C++11"/><img src="PicStl.png" alt="STL"/>
  <a href="CppDoubleToStr.htm">DoubleToStr</a> using the <a href="Cpp11.htm">C++11</a> and the <a href="CppStl.htm">STL</a>
</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppDoubleToStr.htm">DoubleToStr</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppDoubleToStr.htm">DoubleToStr</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppTo_string.htm">std::to_string</a>(x);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="http://www.parashift.com/c++-faq-lite/misc-technical-issues.html#faq-39.1">C++ FAQ lite page about double to std::string conversion</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
