<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Convert</title>
  <meta name="description" content="C++ Convert"/>
  <meta name="keywords" content="C++ convert conversion code snippet snippets"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppConvert.htm">Convert</a></h1>
<p>&nbsp;</p>
<p><a href="CppCodeSnippets.htm">Code snippets</a> to convert a certain <a href="CppDataType.htm">data type</a> to another one.</p>
<p>&nbsp;</p>
<p><a href="CppCheck.htm">Check</a> <a href="CppCodeSnippets.htm">code snippets</a> check if (these) conversion can be succesfull.</p>
<p>&nbsp;</p>
<ol>
  <li><a href="CppLexical_cast.htm">boost::lexical_cast, convert std::string to any data type</a></li>
  <li><a href="CppLexical_cast.htm">boost::lexical_cast, convert std::string to double</a></li>
  <li><a href="CppLexical_cast.htm">boost::lexical_cast, convert std::string to integer</a></li>
  <li><a href="CppCliToInt.htm">CliToInt, convert cln::cl_I to integer</a></li>
  <li><a href="CppCliToStr.htm">CliToStr, convert cln::cl_I to std::string</a></li>
  <li><a href="CppContainerToStr.htm">ContainerToStr, convert a container to a std::string</a></li>
  <li><a href="CppAnsiToDouble.htm">Convert AnsiString to double</a></li>
  <li><a href="CppAnsiToInt.htm">Convert AnsiString to integer</a></li>
  <li><a href="CppAnsiToLower.htm">Convert AnsiString to lower case</a></li>
  <li><a href="CppAnsiToStr.htm">Convert AnsiString to std::string</a></li>
  <li><a href="CppAnsiToUpper.htm">Convert AnsiString to upper case</a></li>
  <li><a href="CppAnsiToWide.htm">Convert AnsiString to WideString</a></li>
  <li><a href="CppCliToInt.htm">Convert cln::cl_I to integer, CliToInt</a></li>
  <li><a href="CppCliToStr.htm">Convert cln::cl_I to std::string, CliToStr</a></li>
  <li><a href="CppContainerToStr.htm">Convert container to a std::string, ContainerToStr</a></li>
  <li><a href="CppDoubleToAnsi.htm">Convert double to AnsiString</a></li>
  <li><a href="CppDoubleToStr.htm">Convert double to std::string</a></li>
  <li><a href="CppGrayToInt.htm">Convert Gray code to int, GrayToInt</a></li>
  <li><a href="CppIntToBitString.htm">Convert int to a std::string of zeroes and ones, IntToBitString</a></li>
  <li><a href="CppIntToAnsi.htm">Convert integer to AnsiString, IntToAnsi</a></li>
  <li><a href="CppSafeIntToCli.htm">Convert integer to cln::cl_I, SafeIntToCli</a></li>
  <li><a href="CppIntToGray.htm">Convert int to Gray code, IntToGray</a></li>
  <li><a href="CppIntToQtStr.htm">Convert integer to QString, IntToQtStr</a></li>
  <li><a href="CppIntToStr.htm">Convert integer to std::string, IntToStr</a></li>
  <li><a href="CppIntToStrWithSep.htm">Convert integer to std::string with adding thousands seperators, IntToStrWithSep</a></li>
  <li><a href="CppIntToWString.htm">Convert integer to Wt::WString, IntToWString</a></li>
  <li><a href="CppConvertMatrix.htm">Convert Matrix&lt;X&gt; to Matrix&lt;Y&gt;, ConvertMatrix</a></li>
  <li><a href="CppQtStrToInt.htm">Convert QString to int, QtStrToInt</a></li>
  <li><a href="CppColorToRgb.htm">Convert RGB values to TColor</a></li>
  <li><a href="CppStrToAnsi.htm">Convert std::string to AnsiString</a></li>
  <li><a href="CppLexical_cast.htm">Convert std::string to any data type, boost::lexical_cast</a></li>
  <li><a href="CppLexicalCast.htm">Convert std::string to any data type, LexicalCast</a></li>
  <li><a href="CppLexical_cast.htm">Convert std::string to double, boost::lexical_cast</a></li>
  <li><a href="CppLexicalCast.htm">Convert std::string to double, LexicalCast</a></li>
  <li><a href="CppToDouble.htm">Convert std::string to double, ToDouble</a></li>
  <li><a href="CppLexical_cast.htm">Convert std::string to integer, boost::lexical_cast</a></li>
  <li><a href="CppLexicalCast.htm">Convert std::string to integer, LexicalCast</a></li>
  <li><a href="CppToInt.htm">Convert std::string to integer, ToInt</a></li>
  <li><a href="CppStrToLower.htm">Convert std::string to lower case</a></li>
  <li><a href="CppStrToUpper.htm">Convert std::string to upper case</a></li>
  <li><a href="CppConvertVector.htm">Convert std::vector&lt;X&gt; to std::vector&lt;Y&gt;, ConvertVector</a></li>
  <li><a href="CppStrToWide.htm">Convert std::string to WideString</a></li>
  <li><a href="CppStrToWStr.htm">Convert std::string to Wt::WString, StrToWStr</a></li>
  <li><a href="CppTimeToStr.htm">Convert std::time_t to std::string</a></li>
  <li><a href="CppConvertMatrix.htm">Convert std::vector&lt;std::vector&lt;X&gt; &gt; to std::vector&lt;std::vector&lt;Y&gt; &gt;, ConvertMatrix</a></li>
  <li><a href="CppColorToRgb.htm">Convert TColor to RGB values</a></li>
  <li><a href="CppImageToStringList.htm">Convert TImage to TStringList</a> (<a href="CppAsciiArt.htm">ASCII art</a>)</li>
  <li><a href="CppConvertMatrix.htm">Convert two 2D std::vector&lt;X&gt; to 2D std::vector&lt;Y&gt;, ConvertMatrix</a></li>
  <li><a href="CppWideToAnsi.htm">Convert WideString to AnsiString</a></li>
  <li><a href="CppWideToDouble.htm">Convert WideString to double</a></li>
  <li><a href="CppWideToInt.htm">Convert WideString to integer</a></li>
  <li><a href="CppWideToStr.htm">Convert WideString to std::string</a></li>
  <li><a href="CppWStringToInt.htm">Convert Wt::WString to int, WStringToInt</a></li>
  <li><a href="CppWStrToStr.htm">Convert Wt::WString to std::string, WStrToStr</a></li>
  <li><a href="CppConvertMatrix.htm">ConvertMatrix, convert Matrix&lt;X&gt; to Matrix&lt;Y&gt;</a></li>
  <li><a href="CppConvertMatrix.htm">ConvertMatrix, convert std::vector&lt;std::vector&lt;X&gt; &gt; to std::vector&lt;std::vector&lt;Y&gt; &gt;</a></li>
  <li><a href="CppConvertMatrix.htm">ConvertMatrix, convert two 2D std::vector&lt;X&gt; to 2D std::vector&lt;Y&gt;</a></li>
  <li><a href="CppConvertVector.htm">ConvertVector, convert std::vector&lt;X&gt; to std::vector&lt;Y&gt;</a></li>
  <li><a href="CppGrayToInt.htm">GrayToInt, convert Gray code to int</a></li>
  <li><a href="CppIntToBitString.htm">IntToBitString, convert int to a std::string of zeroes and ones</a></li>
  <li><a href="CppIntToGray.htm">IntToGray, convert int to Gray code</a></li>
  <li><a href="CppIntToQtStr.htm">IntToQtStr, convert integer to QString</a></li>
  <li><a href="CppIntToStr.htm">IntToStr, convert integer to std::string</a></li>
  <li><a href="CppIntToStrWithSep.htm">IntToStrWithSep: convert int to std::string with adding thousands seperators</a></li>
  <li><a href="CppIntToWString.htm">IntToWString, convert integer to Wt::WString</a></li>
  <li><a href="CppLexical_cast.htm">lexical_cast, boost::lexical_cast, convert std::string to any data type</a></li>
  <li><a href="CppLexical_cast.htm">lexical_cast, boost::lexical_cast, convert std::string to double</a></li>
  <li><a href="CppLexical_cast.htm">lexical_cast, boost::lexical_cast, convert std::string to integer</a></li>
  <li><a href="CppLexicalCast.htm">LexicalCast, convert std::string to any data type</a></li>
  <li><a href="CppLexicalCast.htm">LexicalCast, convert std::string to double</a></li>
  <li><a href="CppLexicalCast.htm">LexicalCast, convert std::string to integer</a></li>
  <li><a href="CppQtStrToInt.htm">QtStrToInt, convert QString to int</a></li>
  <li><a href="CppSafeIntToCli.htm">SafeIntToCli, convert int to cln::cl_I</a></li>
  <li><a href="CppStrToWStr.htm">StrToWStr, convert std::string to Wt::WString</a></li>
  <li><a href="CppToDouble.htm">ToDouble, convert std::string to double</a></li>
  <li><a href="CppToInt.htm">ToInt, convert std::string to integer</a></li>
  <li><a href="CppWStringToInt.htm">WStringToInt, convert Wt::WString to int</a></li>
  <li><a href="CppWStrToStr.htm">WStrToStr, convert Wt::WString to std::string</a></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
