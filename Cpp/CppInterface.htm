<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>interface</title>
  <meta name="description" content="C++ Interface"/>
  <meta name="keywords" content="C++ Interface code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppInterface.htm">Interface</a></h1>
<p>&nbsp;</p>
<p>The <a href="CppInterface.htm">interface</a> of a <a href="CppClass.htm">class</a> consists of the <a href="CppPublic.htm">public</a> 
<a href="CppMemberFunction.htm">member functions</a> and <a href="CppVariable.htm">variables</a> of that <a href="CppClass.htm">class</a>.</p>
<p>&nbsp;</p>
<ul>
  <li>
    Make <a href="CppInterface.htm">interfaces</a> easy to use correctly and hard to use incorrectly [1]
  </li>
  <li>
    Seperate the <a href="CppInterface.htm">interface</a> of a <a href="CppClass.htm">class</a> from its <a href="CppImplementation.htm">implementation</a> [4]:
	allow the user not to know what kind of <a href="CppDataType.htm">data types</a> you used in the <a href="CppPrivate.htm">private</a> section of your class
  </li>
  <li>
    Use <a href="CppConst.htm">const</a> <a href="CppPointer.htm">pointers</a> and <a href="CppConst.htm">const</a> <a href="CppReference.htm">references</a> 
    to express immutability in <a href="CppInterface.htm">interfaces [3]
  </li>
  <li>
    <a href="CppDocumentation.htm">Document</a> the <a href="CppInterface.htm">interfaces</a> so that they are  usable by others [2]
  </li>
  <li>
    Have at least one other developer review each <a href="CppInterface.htm">interface</a> [2]
  </li>
  <li>
    Prefer <a href="CppPublic.htm">public</a> <a href="CppMember.htm">members</a> for <a href="CppInterface.htm">interfaces</a> [5]
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!--  1 --><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C++ (3rd edition). ISBN: 0-321-33487-6. Item 18: Make interfaces easy to use correctly and hard to use incorrectly.</li>
  <li><!--  2 --><a href="CppJohnLakos.htm">John Lakos</a>. Large-Scale C++ Software Design. 1996. ISBN: 0-201-63362-0. Chapter 2.6: Document the interfaces so that they are usable by others. Have at least one other developer review each interface</li>
  <li><!--  3 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 7.8. Advice. page 199: '[13] Use const pointers and const references to express immutability in interfaces'</li>
  <li><!--  4 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 16.4. Advice. page 479: '[2] Seperate the interface of a class from its implementation'</li>
  <li><!--  5 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 20.7. Advice. page 611: '[11] Prefer public members for interfaces'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
