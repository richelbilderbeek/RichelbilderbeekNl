<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>GetEmail</title>
  <meta name="description" content="C++ GetEmail"/>
  <meta name="keywords" content="C++ GetEmail function"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppGetEmail.htm">GetEmail</a></h1>
<p>&nbsp;</p>
<p><a href="CppGetEmail.htm">GetEmail</a> is a <a href="CppFunction.htm">function</a> to obtain my email address.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/foreach.hpp&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>/GetEmail is a function to get Bilderbikkel's email address<br/>
<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/CppGetEmail.htm<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetEmail()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppSizeof.htm">sizeof</a></b>(<b><a href="CppInt.htm">int</a></b>)<a href="CppOperatorEqual.htm">==</a>4); <a href="CppComment.htm">//</a>32 bit, need 5 bit per <b><a href="CppChar.htm">char</a></b><br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; v;<br/>
&nbsp;&nbsp;v.push_back(373524753);<br/>
&nbsp;&nbsp;v.push_back(574729473);<br/>
&nbsp;&nbsp;v.push_back(201658497);<br/>
&nbsp;&nbsp;v.push_back( 67477516);<br/>
&nbsp;&nbsp;v.push_back(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;398);<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> s;<br/>
&nbsp;&nbsp;<a href="CppBOOST_FOREACH.htm">BOOST_FOREACH</a>(<b><a href="CppInt.htm">int</a></b> i,v)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>6; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.push_back(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppChar.htm">char</a></b>&gt;((i <a href="CppOperatorModulus.htm">%</a> 32) <a href="CppOperatorPlus.htm">+</a> 97));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i <a href="CppOperatorBitShiftRightAssign.htm">&gt;&gt;=</a> 5;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;s[16] <a href="CppOperatorAssign.htm">=</a> '@';<br/>
&nbsp;&nbsp;s[22] <a href="CppOperatorAssign.htm">=</a> '.';<br/>
&nbsp;&nbsp;s.resize(s.size() <a href="CppOperatorMinus.htm">-</a> 4);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
