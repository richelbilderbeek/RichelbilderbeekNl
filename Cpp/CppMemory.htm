<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>memory</title>
  <meta name="description" content="C++ memory"/>
  <meta name="keywords" content="C++ memory code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppMemory.htm">memory</a></h1>
<p>&nbsp;</p>
<p>A computer's <a href="CppMemory.htm">memory</a> is the amount of fast non-permanent data (<a href="CppRam.htm">RAM</a>) 
that is, among others, used for calculations.</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">C++</a> uses the following major distinct <a href="CppMemory.htm">memory</a> areas [1]:</p>
<p>&nbsp;</p>
<ul>
  <li>Const data: <a href="CppConst.htm">const</a> data known at <a href="CppCompileTime.htm">compile time</a></li>
  <li>Stack: automatic variables that live in their <a href="CppScope.htm">scope</a></li>
  <li>Free store: dynamic memory area allocated/freed by <a href="CppNew.htm">new</a>/<a href="CppDelete.htm">delete</a>. Prefer using the free store [2]</li>
  <li>Heap: dynamic memory area allocated/freed by <a href="CppMalloc.htm">malloc</a>/<a href="CppFree.htm">free</a>. Avoid using the heap [3]</li>
  <li>Global/static: <a href="CppGlobal.htm">global</a>/<a href="CppStatic.htm">static</a> <a href="CppVariable.htm">variables</a> that are initialized at program startup</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><a href="CppHerbSutter.htm">Herb Sutter</a>. Exceptional C++. ISBN: 0-201-61562-2. Item 35: Memory Management - Part 1: Table 1</li>
  <li><a href="CppHerbSutter.htm">Herb Sutter</a>. Exceptional C++. ISBN: 0-201-61562-2. Item 35: 'Prefer using the free store (new/delete)'</li>
  <li><a href="CppHerbSutter.htm">Herb Sutter</a>. Exceptional C++. ISBN: 0-201-61562-2. Item 35: 'Avoid using the heap (malloc/free)'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
