<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>math code snippets</title>
  <meta name="description" content="C++ math code snippets"/>
  <meta name="keywords" content="C++ math mathematics mathematical code snippets snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppMath.htm">Math</a></h1>
<p>&nbsp;</p>
<p><a href="CppCodeSnippets.htm">Code snippets</a> to solve mathematical problems.</p>
<p>&nbsp;</p>
<ol>
  <li><a href="CppAddTwo.htm">Add two to all elements in a std::vector, AddTwo</a></li>
  <li><a href="CppAddTwo.htm">AddTwo, add two to all elements in a std::vector</a></li>
  <li><a href="CppFactorial.htm">Calculate a factorial</a></li>
  <li><a href="CppGetAngle.htm">Calculate an angle between two coordinats</a></li>
  <li><a href="CppGetDistance.htm">Calculate the distance between two coordinats</a></li>
  <li><a href="CppGcd.htm">Calculate the greatest common divisor</a></li>
  <li><a href="CppDoPerfectElasticCollision.htm">Calculate the impulses after a perfect elastic collision, DoPerfectElasticCollision</a></li>
  <li><a href="CppProduct.htm">Calculate the product of std::vector elements, Product</a></li>
  <li><a href="CppProductNonZeroPositives.htm">Calculate the product of all non-zero positive values in a std::vector, ProductNonZeroPositives</a></li>
  <li><a href="CppIntPower.htm">Calculate X to the power of Y for integers, IntPower</a></li>
  <li><a href="CppDoFilterOperation.htm">Convolution, perform a convolution on an image, DoFilterOperation</a></li>
  <li><a href="CppCountNonZeroPositives.htm">Count the number of non-zero positive values in a std::vector, CountNonZeroPositives</a></li>
  <li><a href="CppCountNonZeroPositives.htm">CountNonZeroPositives, count the number of non-zero positive values in a std::vector</a></li>
  <li><a href="CppCryptography.htm">Cryptography algorithm</a> (a very simple one)</li>
  <li><a href="CppDivideTerms.htm">DivideTerms, divide two product term sets</a> (for example {1,2,3,4}/{1,2,3} = 4)</li>
  <li><a href="CppDivideTerms.htm">Divide two product term sets, DivideTerms</a> (for example {1,2,3,4}/{1,2,3} = 4)</li>
  <li><a href="CppDoFilterOperation.htm">DoFilterOperation, perform a convolution on an image</a></li>
  <li><a href="CppDoFilterOperation.htm">DoFilterOperation, perform a filter operation on an image</a></li>
  <li><a href="CppDoPerfectElasticCollision.htm">DoPerfectElasticCollision, calculate the impulses after a perfect elastic collision</a></li>
  <li><a href="CppFactorial.htm">Factorial: Calculate a factorial</a></li>
  <li><a href="CppDoFilterOperation.htm">Filter operation, perform a filter operation on an image, DoFilterOperation</a></li>
  <li><a href="CppFindEquilibrium.htm">FindEquilibrium: Finding an equilibrium or a cycle</a> (uses the logistic growth equation)</li>
  <li><a href="ToolCombinator.htm">Finding a sum for any combination of values</a> (a.k.a. <a href="ToolCombinator.htm">The Combinator</a>)</li>
  <li><a href="CppFindEquilibrium.htm">Finding an equilibrium or a cycle</a> (uses the logistic growth equation)</li>
  <li><a href="CppFmod.htm">Fmod: modulus on floating point numbers</a></li>
  <li><a href="CppGcd.htm">Gcd: Calculate the greatest common divisor</a></li>
  <li><a href="CppGetCumulativeHistogram.htm">Get the cumulative std::vector of a std::vector, GetCumulativeHistogram</a></li>
  <li><a href="CppMeanAndStdDev.htm">Get the mean and standard deviation</a></li>
  <li><a href="CppGetMean.htm">Get the mean value of all elements in a container, GetMean</a></li>
  <li><a href="CppGetMean.htm">Get the mean value of all elements in a container, GetMean</a></li>
  <li><a href="CppGetFactorialTerms.htm">Get the product terms of a factorial, GetFactorialTerms</a></li>
  <li><a href="CppGetStdDev.htm">Get the standard deviation of the values in a container, GetStdDev</a></li>
  <li><a href="CppGetAngle.htm">GetAngle: Calculate an angle between two coordinats</a></li>
  <li><a href="CppGetCumulativeHistogram.htm">GetCumulativeHistogram, get the cumulative std::vector of a std::vector</a></li>
  <li><a href="CppGetDistance.htm">GetDistance: Calculate the distance between two coordinats</a></li>
  <li><a href="CppGetFactorialTerms.htm">GetFactorialTerms, get the product terms of a factorial</a></li>
  <li><a href="CppGetMean.htm">GetMean, get the mean value of all elements in a container</a></li>
  <li><a href="CppGetStdDev.htm">GetStdDev, get the standard deviation of the values in a container</a></li>
  <li><a href="CppGetSum.htm">GetSum, get the sum of all elements in a container</a></li>
  <li><a href="CppGetSumProperDivisors.htm">GetSumProperDivisors, get the sum of all proper divisors of an integer</a></li>
  <li><a href="CppHalve.htm">Halve, replace all values in std::vector by their halves</a></li>
  <li><a href="CppIntPower.htm">IntPower, calculate X to the power of Y for integers</a></li>
  <li><a href="CppIsPerfectNumber.htm">IsPerfectNumber, determines if a number is a perfect number</a></li>
  <li><a href="CppIsPrime.htm">IsPrime, is a number prime?</a></li>
  <li><a href="CppMakeAbs.htm">MakeAbs, replace all values in a std::vector by their absolutes</a></li>
  <li><a href="CppMakeSquare.htm">MakeSquare, square all values in a std::vector</a></li>
  <li><a href="CppMaze.htm">Maze code snippets</a></li>
  <li><a href="CppMeanAndStdDev.htm">MeanAndStdDev: Get the mean and standard deviation</a></li>
  <li><a href="CppFmod.htm">Modulus on floating point numbers</a></li>
  <li><a href="CppNormalDistribution.htm">Normal Distribution code snippets</a></li>
  <li><a href="CppDoPerfectElasticCollision.htm">Perfect elastic collision</a></li>
  <li><a href="CppDoFilterOperation.htm">Perform a convolution on an image, DoFilterOperation</a></li>
  <li><a href="CppDoFilterOperation.htm">Perform a filter operation on an image, DoFilterOperation</a></li>
  <li><a href="CppIsPrime.htm">Prime, IsPrime</a>, is a number prime?</li>
  <li><a href="CppPrimeExpert.htm">Prime, PrimeExpert</a>, to determine whether a number is prime quicker </li>
  <li><a href="CppPrimeExpert.htm">PrimeExpert</a>, to determine whether a number is prime quicker </li>
  <li><a href="CppProduct.htm">Product, calculate the product of std::vector elements</a></li>
  <li><a href="CppProductNonZeroPositives.htm">ProductNonZeroPositives, calculate the product of all non-zero positive values in a std::vector</a></li>
  <li><a href="CppRandomNumber.htm">Random number code snippets</a></li>
  <li><a href="CppReciprocal.htm">Reciprocal, replace all values in a std::vector by their reciprocals</a></li>
  <li><a href="CppMakeAbs.htm">Replace all values in a std::vector by their absolutes, MakeAbs</a></li>
  <li><a href="CppHalve.htm">Replace all values in std::vector by their halves, Halve</a></li>
  <li><a href="CppReciprocal.htm">Replace all values in a std::vector by their reciprocals, Reciprocal</a></li>
  <li><a href="CppReplaceNegativeByZero.htm">Replace all negative values in a std::vector by zeroes, ReplaceNegativeByZero</a></li>
  <li><a href="CppReplaceZeroByOne.htm">Replace all zeroes in a std::vector by a ones, ReplaceZeroByOne</a></li>
  <li><a href="CppStripeAwayTerms.htm">Replace identical product terms by 1, StripeAwayTerms</a> (for example {1,2,3,4} and {1,2,3} become {1,1,1,4} and {1,1,1})</li>
  <li><a href="CppReplaceNegativeByZero.htm">ReplaceNegativeByZero, replace all negative values in a std::vector by zeroes</a></li>
  <li><a href="CppReplaceZeroByOne.htm">ReplaceZeroByOne, replace all zeroes in a std::vector by ones</a></li>
  <li><a href="CppRescale.htm">Rescale a 2D std::vector from a certain range to a new range, Rescale</a></li>
  <li><a href="CppRescale.htm">Rescale a double from a certain range to a new range, Rescale</a></li>
  <li><a href="CppRescale.htm">Rescale, rescale a 2D std::vector from a certain range to a new range</a></li>
  <li><a href="CppRescale.htm">Rescale, rescale a double from a certain range to a new range</a></li>
  <li><a href="CppRoundOff.htm">Round a double to an integer, RoundOff</a></li>
  <li><a href="CppRoundOff.htm">RoundOff, round a double to an integer</a></li>
  <li><a href="CppStatistics.htm">Statistics code snippets</a></li>
  <li><a href="CppSolveQuadratic.htm">Solve a quadratic equation, SolveQuadratic</a></li>
  <li><a href="CppSolveQuadratic.htm">SolveQuadratic, solve a quadratic equation</a></li>
  <li><a href="CppMakeSquare.htm">Square all values in a std::vector, MakeSquare</a></li>
  <li><a href="CppStripeAwayTerms.htm">StripeAwayTerms, replace identical product terms by 1</a> (for example {1,2,3,4} and {1,2,3} become {1,1,1,4} and {1,1,1})</li>
  <li><a href="CppSumPositives.htm">Sum all positive values in a std::vector, SumPositives</a></li>
  <li><a href="CppSumPositives.htm">SumPositives, sum all positive values in a std::vector</a></li>
  <li><a href="ToolCombinator.htm">The Combinator: Finding a sum for any combination of values</a></li>
  <li><a href="CppTriple.htm">Triple, triple all values in a std::vector</a></li>
  <li><a href="CppTriple.htm">Triple all values in a std::vector, Triple</a></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
