<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>algorithm</title>
  <meta name="description" content="C++ algorithm"/>
  <meta name="keywords" content="C++ algorithm algorithms"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppAlgorithm.htm">Algorithm</a></h1>
<p>&nbsp;</p>
<p><a href="CppAlgorithm.htm">Algorithm</a> has multiple meanings:</p>
<ul>
	<li><img src="PicSpacer.png" alt=" "/> an algorithm in general</li>
	<li><img src="PicStl.png" alt="STL"/> an <a href="CppStl.htm">STL</a> algorithm</li>
	<li><img src="PicBoost.png" alt="Boost"/> the <a href="CppBoostAlgorithm.htm">Boost.Algorithm</a> <a href="CppLibrary.htm">library</a>: see <a href="CppBoostAlgorithm.htm">Boost.Algorithm</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Algorithm (general)</h2>
<p>&nbsp;</p>
<p>An algorithm is a process to be followed in a calculation.</p>
<p>&nbsp;</p>
<p><a href="CppAlgorithm.htm">Algorithms</a> can be modified by <a href="CppAdapter.htm">adapters</a>, <a href="CppBinder.htm">binders</a> and <a href="CppNegater.htm">negaters</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppStl.htm">STL</a> <a href="CppAlgorithm.htm">algorithms</a></h2>
<p>&nbsp;</p>
<p>Most <a href="CppAlgorithm.htm">algorithms</a> can be found in the <a href="CppHeaderFile.htm">header file</a> <a href="CppAlgorithmH.htm">algorithm.h</a>.</p>
<p>&nbsp;</p>
<p>Non-standard <a href="CppAlgorithm.htm">algorithms</a> lack the <a href="CppStd.htm">std</a> prefix.</p>
<p>&nbsp;</p>
<p>The <a href="Cpp11.htm">C++11</a> <a href="CppAlgorithm.htm">algorithm</a> names [3]:</h2>
<p>&nbsp;</p>
<ol>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdAccumulate.htm">std::accumulate</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdAccumulate_if.htm">accumulate_if</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdAdjacent_find.htm">std::adjacent_find</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdAll_of.htm">std::all_of</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdAny_of.htm">std::any_of</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdBinary_search.htm">std::binary_search</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdCopy.htm">std::copy</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdCopy_backward.htm">std::copy_backward</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCopy_if.htm">copy_if</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCopy_if.htm">std::copy_if</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdCopy_n.htm">std::copy_n</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCStdount.htm">std::count</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdCount_if.htm">std::count_if</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdEqual.htm">std::equal</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdEqual_range.htm">std::equal_range</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdFill.htm">std::fill</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdFind.htm">std::find</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdFind_end.htm">std::find_end</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdFind_first_of.htm">std::find_first_of</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdFind_if.htm">std::find_if</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdFind_if_not.htm">std::find_if_not</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdFor_each.htm">std::for_each</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdGenerate.htm">std::generate</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdGenerate_n.htm">std::generate_n</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdIncludes.htm">std::includes</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdInner_product.htm">std::inner_product</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdInplace_merge.htm">std::inplace_merge</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdIota.htm">std::iota</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdIs_heap.htm">std::is_heap</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdIs_heap_until.htm">std::is_heap_until</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdIs_sorted.htm">std::is_sorted</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdIs_sorted_until.htm">std::is_sorted_until</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdIter_swap.htm">std::iter_swap</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdLexicographical_compare.htm">std::lexicographical_compare</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdLower_bound.htm">std::lower_bound</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdMake_heap.htm">std::make_heap</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdMax.htm">std::max</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdMax_element.htm">std::max_element</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdMerge.htm">std::merge</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdMin.htm">std::min</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdMin_element.htm">std::min_element</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdMinmax.htm">std::minmax</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdMinmax_element.htm">std::minmax_element</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdMismatch.htm">std::mismatch</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdMove.htm">std::move</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdMove_backward.htm">std::move_backward</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdNext_permutation.htm">std::next_permutation</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdNone_of.htm">std::none_of</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdNth_element.htm">std::nth_element</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdPartial_sort.htm">std::partial_sort</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdPartial_sort_copy.htm">std::partial_sort_copy</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdPartition.htm">std::partition</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdPartition_copy.htm">std::partition_copy</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdPartition_point.htm">std::partition_point</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdPop_heap.htm">std::pop_heap</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdPrev_permutation.htm">std::prev_permutation</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdPush_heap.htm">std::push_heap</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdRandom_shuffle.htm">std::random_shuffle</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdRemove.htm">std::remove</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdRemove_copy.htm">std::remove_copy</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdRemove_copy_if.htm">std::remove_copy_if</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdRemove_if.htm">std::remove_if</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdReplace.htm">std::replace</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdReplace_copy.htm">std::replace_copy</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdReplace_copy_if.htm">std::replace_copy_if</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdReplace_if.htm">std::replace_if</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdReverse.htm">std::reverse</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdReverse_copy.htm">std::reverse_copy</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdRotate.htm">std::rotate</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdRotate_copy.htm">std::rotate_copy</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdSearch.htm">std::search</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdSearch_n.htm">std::search_n</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdSet_difference.htm">std::set_difference</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdSet_intersection.htm">std::set_intersection</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdSet_symmetric_difference.htm">std::set_symmetric_difference</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdSet_union.htm">std::set_union</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdSort.htm">std::sort</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdSort_heap.htm">std::sort_heap</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdStable_partition.htm">std::stable_partition</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdStable_sort.htm">std::stable_sort</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdSwap.htm">std::swap</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdSwap_ranges.htm">std::swap_ranges</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdTransform.htm">std::transform</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdUnique.htm">std::unique</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdUnique_copy.htm">std::unique_copy</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdUpper_bound.htm">std::upper_bound</a></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppAdvice.htm">Advice</a></h2>
<p>&nbsp;</p>
<ul>
  <li>
    Prefer <a href="CppAlgorithm.htm">algorithm</a> calls over hand-written loops [1,2]
  </li>
  <li>
    Use <a href="CppTemplate.htm">templates</a> to express <a href="CppAlgorithm.htm">algorithms</a> that apply to many <a href="CppArgument.htm">argument</a> <a href="CppDataType.htm">types</a> [4]
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!--  1 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (3rd edition). ISBN: 0-201-88954-4. Chapter 18.12.1: 'Prefer algorithms to loops'.</li>
  <li><!--  2 --><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective STL. ISBN: 0-201-74962-9. Item 43: 'Prefer algorithm calls over hand-written loops'</li>
  <li><!--  3 --><a href="http://www2.research.att.com/~bs/C++0xFAQ.html#algorithms">Bjarne Stroustrup's C++0x FAQ page</a></li>
  <li><!--  4 --><a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (4th edition). 2013. ISBN: 978-0-321-56384-2. Chapter 23.8, page 698: '[1] Use templates to express algorithms that apply to many argument types'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
