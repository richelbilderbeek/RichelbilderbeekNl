<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>__gnu_cxx::hash_set</title>
  <meta name="description" content="C++ __gnu_cxx::hash_set"/>
  <meta name="keywords" content="C++ __gnu_cxx::hash_set std::hash_set boost::hash_set hash_set hash hashed set code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppHash_set.htm">__gnu_cxx::hash_set</a></h1>
<p>&nbsp;</p>
<p><a href="CppHash_set.htm">__gnu_cxx::hash_set</a> is a <a href="CppContainer.htm">container</a> to store elements like in a <a href="CppSet.htm">std::set</a> in such a way that retrieval is quicker.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppHash_set.zip">Download the Qt Creator project 'CppHash_set' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;ext/hash_set&gt;<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> File<br/>
{<br/>
&nbsp;&nbsp;File(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> any_id, <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; any_name)<br/>
&nbsp;&nbsp;: id(any_id), name(any_name) {}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> id;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> name;<br/>
};<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorEqual.htm">operator==</a></b>(<b><a href="CppConst.htm">const</a></b> File&amp; lhs, <b><a href="CppConst.htm">const</a></b> File&amp; rhs)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> (lhs.id <a href="CppOperatorEqual.htm">==</a> rhs.id <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.name <a href="CppOperatorEqual.htm">==</a> rhs.name);<br/>
}<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Hash_file<br/>
{<br/>
&nbsp;&nbsp;<a href="CppSize_t.htm">std::size_t</a> <b><a href="CppOperatorFunctionCall.htm">operator()</a></b>(<b><a href="CppConst.htm">const</a></b> File&amp; f) <b><a href="CppConst.htm">const</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;__gnu_cxx::hash&lt;<b><a href="CppInt.htm">int</a></b>&gt; hash_function;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> hash_function(f.id);<br/>
&nbsp;&nbsp;}<br/>
};<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppHash_set.htm">__gnu_cxx::hash_set</a>;&lt;File, Hash_file&gt; files;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> File f1 <a href="CppOperatorAssign.htm">=</a> File(0,"Bilderbikkel.txt");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> File f2 <a href="CppOperatorAssign.htm">=</a> File(1,"Parachutemeisje.txt");<br/>
<br/>
&nbsp;&nbsp;files.insert(f1);<br/>
&nbsp;&nbsp;files.insert(f2);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((*files.find(f1)).id <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((*files.find(f1)).name <a href="CppOperatorEqual.htm">==</a> "Bilderbikkel.txt");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((*files.find(f2)).id <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((*files.find(f2)).name <a href="CppOperatorEqual.htm">==</a> "Parachutemeisje.txt");<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
