<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>IsSorted</title>
  <meta name="description" content="C++ IsSorted"/>
  <meta name="keywords" content="C++ IsSorted check if a std::vector vector is sorted is_sorted algorithm code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppIsSorted.htm">IsSorted</a></h1>
<p>&nbsp;</p>
<p><a href="CppIsSorted.htm">IsSorted</a> is a <a href="CppCheck.htm">check</a> 
<a href="CppCodeSnippets.htm">code snippet</a> to <a href="CppCheck.htm">check</a>
if a <a href="CppVector.htm">std::vector</a> is sorted.</p>
<p>&nbsp;</p>
<p>There are multiple versions of <a href="CppIsSorted.htm">IsSorted</a>:</p>
<p>&nbsp;</p>
<ul>
  <li>
    <img src="PicCpp98.png" alt="C++98"/> 
    <a href="CppIsSorted.htm">IsSorted</a> for <a href="CppVector.htm">std::vector</a> using the <a href="Cpp98.htm">C++98</a> <a href="CppStl.htm">STL</a>
  </li>
  <li>
    <img src="PicCpp98.png" alt="C++98"/> 
    <a href="CppIsSorted.htm">IsSorted</a> for any <a href="CppContainer.htm">container</a> using the <a href="Cpp98.htm">C++98</a> <a href="CppStl.htm">STL</a>
  </li> 
  <li>
    <img src="PicCpp11.png" alt="C++11"/> 
    <a href="CppIsSorted.htm">IsSorted</a> for any <a href="CppContainer.htm">container</a> using the <a href="Cpp11.htm">C++11</a> <a href="CppStl.htm">STL</a>
  </li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicCpp98.png" alt="C++98"/> 
  <a href="CppIsSorted.htm">IsSorted</a> for <a href="CppVector.htm">std::vector</a> using the <a href="Cpp98.htm">C++98</a> <a href="CppStl.htm">STL</a>
</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFunctionalH.htm">functional</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>/<a href="CppIsSorted.htm">IsSorted</a> checks <b><a href="CppIf.htm">if</a></b> a <a href="CppVector.htm">std::vector</a> is sorted.<br/>
<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/Cpp<a href="CppIsSorted.htm">IsSorted</a>.htm<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppIsSorted.htm">IsSorted</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;T&gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppAdjacent_find.htm">std::adjacent_find</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppGreater.htm">std::greater</a>&lt;T&gt;()) <a href="CppOperatorEqual.htm">==</a> v.end();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicCpp98.png" alt="C++98"/> 
  <a href="CppIsSorted.htm">IsSorted</a> for a <a href="CppVector.htm">std::vector</a> using the <a href="Cpp98.htm">C++98</a> <a href="CppStl.htm">STL</a>
</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFunctionalH.htm">functional</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>/<a href="CppIsSorted.htm">IsSorted</a> checks <b><a href="CppIf.htm">if</a></b> a <a href="CppVector.htm">std::vector</a> is sorted.<br/>
<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/Cpp<a href="CppIsSorted.htm">IsSorted</a>.htm<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppIsSorted.htm">IsSorted</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;T&gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppAdjacent_find.htm">std::adjacent_find</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppGreater.htm">std::greater</a>&lt;T&gt;()) <a href="CppOperatorEqual.htm">==</a> v.end();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicCpp98.png" alt="C++98"/> 
  <a href="CppIsSorted.htm">IsSorted</a> for any <a href="CppContainer.htm">container</a> using the <a href="Cpp98.htm">C++98</a> <a href="CppStl.htm">STL</a>
</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFunctionalH.htm">functional</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppIsSorted.htm">IsSorted</a> checks <b><a href="CppIf.htm">if</a></b> a <a href="CppContainer.htm">container</a> is sorted.<br/>
<a href="CppComment.htm">///</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppIsSorted.htm">IsSorted</a>.htm<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppIsSorted.htm">IsSorted</a>Stl98(<b><a href="CppConst.htm">const</a></b> T&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppAdjacent_find.htm">std::adjacent_find</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.begin(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppGreater.htm">std::greater</a>&lt;<b><a href="CppTypename.htm">typename</a></b> T::value_type&gt;()) <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> v.end();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>
  <img src="PicCpp11.png" alt="C++11"/> 
  <a href="CppIsSorted.htm">IsSorted</a> for any <a href="CppContainer.htm">container</a> using the <a href="Cpp11.htm">C++11</a> <a href="CppStl.htm">STL</a>
</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFunctionalH.htm">functional</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppIsSorted.htm">IsSorted</a> checks <b><a href="CppIf.htm">if</a></b> a <a href="CppContainer.htm">container</a> is sorted.<br/>
<a href="CppComment.htm">///</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppIsSorted.htm">IsSorted</a>.htm<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppIsSorted.htm">IsSorted</a>Stl11(<b><a href="CppConst.htm">const</a></b> T&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppIs_sorted.htm">std::is_sorted</a>(v.begin(),v.end());<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
