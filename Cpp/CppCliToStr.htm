<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>CliToStr</title>
  <meta name="description" content="C++ CliToStr"/>
  <meta name="keywords" content="C++ CliToStr cln::cl_I cln cl_I to string std::string convert code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppCliToStr.htm">CliToStr</a></h1>
<p>&nbsp;</p>
<p><a href="CppCliToStr.htm">CliToStr</a> is a <a href="CppCl_I.htm">cln::cl_I</a> <a href="CppConvert.htm">conversion</a> <a href="CppCodeSnippets.htm">code snippets</a> to <a href="CppConvert.htm">convert</a> a <a href="CppCl_I.htm">cln::cl_I</a> to an <a href="CppString.htm">std::string</a>.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;cln/cln.h&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>/<a href="CppCliToStr.htm">CliToStr</a> converts a <a href="CppCl_I.htm">cln::cl_I</a> to <a href="CppString.htm">std::string</a>.<br/>
<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/Cpp<a href="CppCliToStr.htm">CliToStr</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppCliToStr.htm">CliToStr</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppCl_I.htm">cln::cl_I</a>&amp; i)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> i;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s.str();<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "12345678901234567890";<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppCl_I.htm">cln::cl_I</a> i(s.c_str());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> t <a href="CppOperatorAssign.htm">=</a> <a href="CppCliToStr.htm">CliToStr</a>(i);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s<a href="CppOperatorEqual.htm">==</a>t);<br/>
}<br/>
<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
