<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Append</title>
  <meta name="description" content="C++ Append"/>
  <meta name="keywords" content="C++ Append"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppAppend.htm">Append</a></h1>
<p>&nbsp;</p>
<p>Appends two containers using the <a href="CppAlgorithm.htm">algorithm</a> <a href="CppCopy.htm">std::copy</a> and a <a href="CppBack_inserter.htm">std::back_inserter</a></p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a><br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> Container&gt;<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppAppend.htm">Append</a>(Container&amp; toWhat, <b><a href="CppConst.htm">const</a></b> Container&amp; whatToAppend)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppCopy.htm">std::copy</a>(whatToAppend.begin(),whatToAppend.end(),<a href="CppBack_inserter.htm">std::back_inserter</a> (toWhat));<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Append test</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a><br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> Container&gt;<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppAppend.htm">Append</a>(Container&amp; toWhat, <b><a href="CppConst.htm">const</a></b> Container&amp; whatToAppend)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppCopy.htm">std::copy</a>(whatToAppend.begin(),whatToAppend.end(),<a href="CppBack_inserter.htm">std::back_inserter</a> (toWhat));<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppCreateVector.htm">CreateVector</a>.htm<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;T&gt; <a href="CppCreateVector.htm">CreateVector</a>(<b><a href="CppConst.htm">const</a></b> T&amp; a, <b><a href="CppConst.htm">const</a></b> T&amp; b, <b><a href="CppConst.htm">const</a></b> T&amp; c)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;T&gt; v;<br/>
&nbsp;&nbsp;v.reserve(3);<br/>
&nbsp;&nbsp;v.push_back(a);<br/>
&nbsp;&nbsp;v.push_back(b);<br/>
&nbsp;&nbsp;v.push_back(c);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Example <b><a href="CppUsing.htm">using</a></b> <a href="CppVector.htm">std::vector</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; v = <a href="CppCreateVector.htm">CreateVector</a>(1,4,9);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; toAppend = <a href="CppCreateVector.htm">CreateVector</a>(16,25,36);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAppend.htm">Append</a>(v,toAppend);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[0]<a href="CppOperatorEqual.htm">==</a>1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[1]<a href="CppOperatorEqual.htm">==</a>4);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[2]<a href="CppOperatorEqual.htm">==</a>9);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[3]<a href="CppOperatorEqual.htm">==</a>16);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[4]<a href="CppOperatorEqual.htm">==</a>25);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[5]<a href="CppOperatorEqual.htm">==</a>36);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{ <a href="CppComment.htm">//</a>Example <b><a href="CppUsing.htm">using</a></b> <a href="CppString.htm">std::string</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> s = "Richel";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> toAppend = " Bilderbeek";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>(sure, one could also have used 's+=toAppend')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAppend.htm">Append</a>(s,toAppend);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s<a href="CppOperatorEqual.htm">==</a>"Richel Bilderbeek");<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>

