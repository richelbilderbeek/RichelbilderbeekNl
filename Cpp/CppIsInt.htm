<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>IsInt</title>
  <meta name="description" content="C++ IsInt"/>
  <meta name="keywords" content="C++ IsInt "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppIsInt.htm">IsInt</a></h1>
<p>&nbsp;</p>
<!-- This page is generated by CodeToHtml version 1.2.780 at Tue Aug  4 12:10:14 2015
 -->
<p>  <a href="CppIsInt.htm">IsInt</a> is a <a href="CppCheck.htm">checking</a>  <a href="CppCodeSnippets.htm">code snippet</a> to <a href="CppCheck.htm">check</a> if a  <a href="CppStdString.htm">std::string</a> can be  <a href="CppConvert.htm">converted</a> to an  <a href="CppInt.htm">integer</a>.</p><p>&nbsp;</p><p>  <a href="CppCanCast.htm">CanCast</a> and  <a href="CppCanLexicalCast.htm">CanLexicalCast</a> are more general versions  of <a href="CppIsInt.htm">IsInt</a>.</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 15.04 (vivid)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 3.1.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.9.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.9.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./CppIsInt/CppIsInt.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppIsInt/CppIsInt.pro" border = "1"><tr><td><code>
include(../../<a href="CppConsoleApplication.htm">ConsoleApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/<a href="CppBoost.htm">Boost</a>.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppIsInt/main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppIsInt/main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppIsInt.htm">IsInt</a> determines <b><a href="CppIf.htm">if</a></b> <a href="CppStdString.htm">std::string</a> can be <a href="CppConvert.htm">convert</a>ed to <a href="CppInt.htm">integer</a>.<br/>
<a href="CppComment.htm">///</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppIsInt.htm">IsInt</a>.htm<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppIsInt.htm">IsInt</a>Stl(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStdIstringstream.htm">std::istringstream</a> i(s);<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> temp{0};<br/>
&nbsp;&nbsp;i <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> temp;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!i) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppChar.htm">char</a></b> c{'\0'}; <a href="CppComment.htm">//</a>Should be at end, <b><a href="CppIf.htm">if</a></b> not, the string contained more than just a number<br/>
&nbsp;&nbsp;i <a href="CppOperatorStreamIn.htm">&gt;&gt;</a> c;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (i) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppIsInt.htm">IsInt</a> determines <b><a href="CppIf.htm">if</a></b> <a href="CppStdString.htm">std::string</a> can be <a href="CppConvert.htm">convert</a>ed to <a href="CppInt.htm">integer</a>.<br/>
<a href="CppComment.htm">///</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppIsInt.htm">IsInt</a>.htm<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppIsInt.htm">IsInt</a><a href="CppBoost.htm">Boost</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppStdString.htm">std::string</a>&amp; s) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppBoostBad_lexical_cast.htm">boost::bad_lexical_cast</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsInt.htm">IsInt</a>Stl("3"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsInt.htm">IsInt</a>Stl("0"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsInt.htm">IsInt</a>Stl("-23"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsInt.htm">IsInt</a>Stl("a"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsInt.htm">IsInt</a>Stl("2+fire"));<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsInt.htm">IsInt</a><a href="CppBoost.htm">Boost</a>("3"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsInt.htm">IsInt</a><a href="CppBoost.htm">Boost</a>("0"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppIsInt.htm">IsInt</a><a href="CppBoost.htm">Boost</a>("-23"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsInt.htm">IsInt</a><a href="CppBoost.htm">Boost</a>("a"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppIsInt.htm">IsInt</a><a href="CppBoost.htm">Boost</a>("2+fire"));<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
