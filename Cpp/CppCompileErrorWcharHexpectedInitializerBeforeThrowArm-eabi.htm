<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>compile error: wchar.h:718: error: expected initializer before 'throw' (while using arm-eabi)</title>
  <meta name="description" content="C++ compile error: wchar.h:718: error: expected initializer before 'throw' (while using arm-eabi)"/>
  <meta name="keywords" content="C++ compile error: wchar.h:718: error: expected initializer before 'throw' (while using arm-eabi)"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>
  (<a href="Cpp.htm">C++</a>) 
  <img src="PicBoost.png" alt="Boost"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicUbuntu.png" alt="Ubuntu"/><img src="PicTo.png" alt="to"/><img src="PicNds.png" alt="NDS"/> 
  <a href="CppCompileErrorWcharHexpectedInitializerBeforeThrowArm-eabi.htm">wchar.h:718: error: expected initializer before 'throw' (while using arm-eabi)</a>
</h1>
<p>&nbsp;</p>
<p>Version of the <a href="CppCompileError.htm">compile error</a> 
<a href="CppCompileErrorWcharHexpectedInitializerBeforeThrow.htm">wchar.h:718: error: expected initializer before 'throw'</a>
when using <a href="CppArm-eabi.htm">arm-eabi</a>, for example, when creating
<a href="CppHelloBoostQtCreatorUbuntuNds.htm">'Hello Boost' using Qt Creator under Ubuntu for NDS</a>.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppCompileErrorWcharHexpectedInitializerBeforeThrowArm-eabi.zip">Download the Qt Creator project 'CppCompileErrorWcharHexpectedInitializerBeforeThrowArm-eabi' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></h2>
<p>&nbsp;</p>
<ul>
  <li><img src="PicNds.png" alt="NDS"/> <a href="CppNds.htm">NDS</a></li>
  <li><img src="PicUbuntu.png" alt="Ubuntu"/> <a href="CppUbuntu.htm">Ubuntu</a> 10.04 LTS Lucid Lynx</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicCl.png" alt="Command line"/> command line</li>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 2.0.0 </li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> Console application</li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.4.1</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicBoost.png" alt="Boost"/> <a href="CppBoost.htm">Boost</a>: version 1.40</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: from <a href="CppGcc.htm">GCC</a>, shipped with <a href="CppQt.htm">Qt Creator</a> 2.0.0</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Project file</a></h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
#-------------------------------------------------<br/>
#<br/>
# Project created by QtCreator 2010-10-07T22:25:11<br/>
#<br/>
#-------------------------------------------------<br/>
INCLUDEPATH += \<br/>
&nbsp;&nbsp;/usr/include \<br/>
&nbsp;&nbsp;/opt/devkitpro/libnds-1.4.7/include<br/>
LIBS += \<br/>
&nbsp;&nbsp;-lboost_regex \<br/>
&nbsp;&nbsp;-L/opt/devkitpro/libnds-1.4.7/lib -lnds9<br/>
DEFINES += ARM9<br/>
TARGET = CppHelloBoostQtCreatorUbuntuNds<br/>
CONFIG&nbsp;&nbsp; += console static<br/>
CONFIG&nbsp;&nbsp; -= app_bundle qt<br/>
TEMPLATE = app<br/>
SOURCES += main.cpp<br/>
QMAKE_CC = /opt/devkitpro/devkitARM/bin/arm-eabi-g++<br/>
QMAKE_CXX = /opt/devkitpro/devkitARM/bin/arm-eabi-g++<br/>
QMAKE_LINK = /opt/devkitpro/devkitARM/bin/arm-eabi-g++<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppMakefile.htm">Makefile</a> used</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
#---------------------------------------------------------------------------------<br/>
.SUFFIXES:<br/>
#---------------------------------------------------------------------------------<br/>
ifeq ($(strip $(DEVKITARM)),)<br/>
$(error "Please set DEVKITARM in your environment. export DEVKITARM=&lt;path to&gt;devkitARM")<br/>
endif<br/>
<br/>
include $(DEVKITARM)/ds_rules<br/>
<br/>
#---------------------------------------------------------------------------------<br/>
# TARGET is the name of the output<br/>
# BUILD is the directory where object files &amp; intermediate files will be placed<br/>
# SOURCES is a list of directories containing source code<br/>
# INCLUDES is a list of directories containing extra header files<br/>
#---------------------------------------------------------------------------------<br/>
TARGET		:=	$(shell basename $(CURDIR))<br/>
BUILD		:=	build<br/>
SOURCES		:=	gfx source data&nbsp;&nbsp;<br/>
INCLUDES	:=	include build \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;../opt/devkitpro/libnds-1.4.7/include \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;../../../../../../../usr/include<br/>
<br/>
#---------------------------------------------------------------------------------<br/>
# options for code generation<br/>
#---------------------------------------------------------------------------------<br/>
ARCH	:=	-mthumb -mthumb-interwork<br/>
<br/>
CFLAGS	:=	-g -Wall -O2\<br/>
 			-march=armv5te -mtune=arm946e-s -fomit-frame-pointer\<br/>
			-ffast-math \<br/>
			$(ARCH)<br/>
<br/>
CFLAGS	+=	$(INCLUDE) -DARM9<br/>
CXXFLAGS	:= $(CFLAGS) -fno-rtti -fno-exceptions<br/>
<br/>
ASFLAGS	:=	-g $(ARCH)<br/>
LDFLAGS	=	-specs=ds_arm9.specs -g $(ARCH) -mno-fpu -Wl,-Map,$(notdir $*.map)<br/>
<br/>
#---------------------------------------------------------------------------------<br/>
# any extra libraries we wish to link with the project<br/>
#---------------------------------------------------------------------------------<br/>
LIBS	:= /usr/lib -lboost_regex -lnds9<br/>
 <br/>
 <br/>
#---------------------------------------------------------------------------------<br/>
# list of directories containing libraries, this must be the top level containing<br/>
# include and lib<br/>
#---------------------------------------------------------------------------------<br/>
LIBDIRS	:=	$(LIBNDS)<br/>
 <br/>
#---------------------------------------------------------------------------------<br/>
# no real need to edit anything past this point unless you need to add additional<br/>
# rules for different file extensions<br/>
#---------------------------------------------------------------------------------<br/>
ifneq ($(BUILD),$(notdir $(CURDIR)))<br/>
#---------------------------------------------------------------------------------<br/>
 <br/>
export OUTPUT	:=	$(CURDIR)/$(TARGET)<br/>
 <br/>
export VPATH	:=	$(foreach dir,$(SOURCES),$(CURDIR)/$(dir))<br/>
export DEPSDIR	:=	$(CURDIR)/$(BUILD)<br/>
<br/>
CFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.c)))<br/>
CPPFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.cpp)))<br/>
SFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.s)))<br/>
BINFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.bin)))<br/>
 <br/>
#---------------------------------------------------------------------------------<br/>
# use CXX for linking C++ projects, CC for standard C<br/>
#---------------------------------------------------------------------------------<br/>
ifeq ($(strip $(CPPFILES)),)<br/>
#---------------------------------------------------------------------------------<br/>
	export LD	:=	$(CC)<br/>
#---------------------------------------------------------------------------------<br/>
else<br/>
#---------------------------------------------------------------------------------<br/>
	export LD	:=	$(CXX)<br/>
#---------------------------------------------------------------------------------<br/>
endif<br/>
#---------------------------------------------------------------------------------<br/>
<br/>
export OFILES	:=	$(BINFILES:.bin=.o) \<br/>
					$(CPPFILES:.cpp=.o) $(CFILES:.c=.o) $(SFILES:.s=.o)<br/>
 <br/>
export INCLUDE	:=	$(foreach dir,$(INCLUDES),-I$(CURDIR)/$(dir)) \<br/>
					$(foreach dir,$(LIBDIRS),-I$(dir)/include) \<br/>
					$(foreach dir,$(LIBDIRS),-I$(dir)/include) \<br/>
					-I$(CURDIR)/$(BUILD)<br/>
 <br/>
export LIBPATHS	:=	$(foreach dir,$(LIBDIRS),-L$(dir)/lib)<br/>
 <br/>
.PHONY: $(BUILD) clean<br/>
 <br/>
#---------------------------------------------------------------------------------<br/>
$(BUILD):<br/>
	@[ -d $@ ] || mkdir -p $@<br/>
	@make --no-print-directory -C $(BUILD) -f $(CURDIR)/Makefile<br/>
 <br/>
#---------------------------------------------------------------------------------<br/>
clean:<br/>
	@echo clean ...<br/>
	@rm -fr $(BUILD) $(TARGET).elf $(TARGET).nds $(TARGET).ds.gba <br/>
 <br/>
 <br/>
#---------------------------------------------------------------------------------<br/>
else<br/>
 <br/>
DEPENDS	:=	$(OFILES:.o=.d)<br/>
 <br/>
#---------------------------------------------------------------------------------<br/>
# main targets<br/>
#---------------------------------------------------------------------------------<br/>
$(OUTPUT).nds	: 	$(OUTPUT).elf<br/>
$(OUTPUT).elf	:	$(OFILES)<br/>
 <br/>
#---------------------------------------------------------------------------------<br/>
%.o	:	%.bin<br/>
#---------------------------------------------------------------------------------<br/>
	@echo $(notdir $&lt;)<br/>
	$(bin2o)<br/>
 <br/>
 <br/>
-include $(DEPENDS)<br/>
 <br/>
#---------------------------------------------------------------------------------------<br/>
endif<br/>
#---------------------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppMakefile.htm">Makefile</a> generated by <a href="CppQmake.htm">qmake</a></h2>
<p>&nbsp;</p>
<p>Results in the same error!</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
#############################################################################<br/>
# Makefile for building: CppHelloBoostQtCreatorUbuntuNds<br/>
# Generated by qmake (2.01a) (Qt 4.6.2) on: Sun Oct 10 12:38:55 2010<br/>
# Project:&nbsp;&nbsp;../source/CppHelloBoostQtCreatorUbuntuNds.pro<br/>
# Template: app<br/>
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile ../source/CppHelloBoostQtCreatorUbuntuNds.pro<br/>
#############################################################################<br/>
<br/>
####### Compiler, tools and options<br/>
<br/>
CC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= /opt/devkitpro/devkitARM/bin/arm-eabi-g++<br/>
CXX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = /opt/devkitpro/devkitARM/bin/arm-eabi-g++<br/>
DEFINES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = -DARM9<br/>
CFLAGS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= -pipe -g -Wall -W $(DEFINES)<br/>
CXXFLAGS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= -pipe -g -Wall -W $(DEFINES)<br/>
INCPATH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = -I/usr/share/qt4/mkspecs/linux-g++ -I../source -I/usr/include -I/opt/devkitpro/libnds-1.4.7/include -I../source -I.<br/>
LINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= /opt/devkitpro/devkitARM/bin/arm-eabi-g++<br/>
LFLAGS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= <br/>
LIBS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= $(SUBLIBS)&nbsp;&nbsp; -lboost_regex -L/opt/devkitpro/libnds-1.4.7/lib -lnds9 <br/>
AR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ar cqs<br/>
RANLIB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= <br/>
QMAKE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = /usr/bin/qmake-qt4<br/>
TAR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = tar -cf<br/>
COMPRESS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= gzip -9f<br/>
COPY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= cp -f<br/>
SED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = sed<br/>
COPY_FILE&nbsp;&nbsp;&nbsp;&nbsp; = $(COPY)<br/>
COPY_DIR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= $(COPY) -r<br/>
STRIP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = strip<br/>
INSTALL_FILE&nbsp;&nbsp;= install -m 644 -p<br/>
INSTALL_DIR&nbsp;&nbsp; = $(COPY_DIR)<br/>
INSTALL_PROGRAM = install -m 755 -p<br/>
DEL_FILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= rm -f<br/>
SYMLINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = ln -f -s<br/>
DEL_DIR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = rmdir<br/>
MOVE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= mv -f<br/>
CHK_DIR_EXISTS= test -d<br/>
MKDIR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = mkdir -p<br/>
<br/>
####### Output directory<br/>
<br/>
OBJECTS_DIR&nbsp;&nbsp; = ./<br/>
<br/>
####### Files<br/>
<br/>
SOURCES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = ../source/main.cpp <br/>
OBJECTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = main.o<br/>
DIST&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= /usr/share/qt4/mkspecs/common/g++.conf \<br/>
		/usr/share/qt4/mkspecs/common/unix.conf \<br/>
		/usr/share/qt4/mkspecs/common/linux.conf \<br/>
		/usr/share/qt4/mkspecs/qconfig.pri \<br/>
		/usr/share/qt4/mkspecs/features/qt_functions.prf \<br/>
		/usr/share/qt4/mkspecs/features/qt_config.prf \<br/>
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \<br/>
		/usr/share/qt4/mkspecs/features/default_pre.prf \<br/>
		/usr/share/qt4/mkspecs/features/debug.prf \<br/>
		/usr/share/qt4/mkspecs/features/default_post.prf \<br/>
		/usr/share/qt4/mkspecs/features/static.prf \<br/>
		/usr/share/qt4/mkspecs/features/warn_on.prf \<br/>
		/usr/share/qt4/mkspecs/features/resources.prf \<br/>
		/usr/share/qt4/mkspecs/features/uic.prf \<br/>
		/usr/share/qt4/mkspecs/features/yacc.prf \<br/>
		/usr/share/qt4/mkspecs/features/lex.prf \<br/>
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \<br/>
		../source/CppHelloBoostQtCreatorUbuntuNds.pro<br/>
QMAKE_TARGET&nbsp;&nbsp;= CppHelloBoostQtCreatorUbuntuNds<br/>
DESTDIR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = <br/>
TARGET&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= CppHelloBoostQtCreatorUbuntuNds<br/>
<br/>
first: all<br/>
####### Implicit rules<br/>
<br/>
.SUFFIXES: .o .c .cpp .cc .cxx .C<br/>
<br/>
.cpp.o:<br/>
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$&lt;"<br/>
<br/>
.cc.o:<br/>
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$&lt;"<br/>
<br/>
.cxx.o:<br/>
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$&lt;"<br/>
<br/>
.C.o:<br/>
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$&lt;"<br/>
<br/>
.c.o:<br/>
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$&lt;"<br/>
<br/>
####### Build rules<br/>
<br/>
all: Makefile $(TARGET)<br/>
<br/>
$(TARGET):&nbsp;&nbsp;$(OBJECTS)&nbsp;&nbsp;<br/>
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)<br/>
<br/>
Makefile: ../source/CppHelloBoostQtCreatorUbuntuNds.pro&nbsp;&nbsp;/usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \<br/>
		/usr/share/qt4/mkspecs/common/unix.conf \<br/>
		/usr/share/qt4/mkspecs/common/linux.conf \<br/>
		/usr/share/qt4/mkspecs/qconfig.pri \<br/>
		/usr/share/qt4/mkspecs/features/qt_functions.prf \<br/>
		/usr/share/qt4/mkspecs/features/qt_config.prf \<br/>
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \<br/>
		/usr/share/qt4/mkspecs/features/default_pre.prf \<br/>
		/usr/share/qt4/mkspecs/features/debug.prf \<br/>
		/usr/share/qt4/mkspecs/features/default_post.prf \<br/>
		/usr/share/qt4/mkspecs/features/static.prf \<br/>
		/usr/share/qt4/mkspecs/features/warn_on.prf \<br/>
		/usr/share/qt4/mkspecs/features/resources.prf \<br/>
		/usr/share/qt4/mkspecs/features/uic.prf \<br/>
		/usr/share/qt4/mkspecs/features/yacc.prf \<br/>
		/usr/share/qt4/mkspecs/features/lex.prf \<br/>
		/usr/share/qt4/mkspecs/features/include_source_dir.prf<br/>
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile ../source/CppHelloBoostQtCreatorUbuntuNds.pro<br/>
/usr/share/qt4/mkspecs/common/g++.conf:<br/>
/usr/share/qt4/mkspecs/common/unix.conf:<br/>
/usr/share/qt4/mkspecs/common/linux.conf:<br/>
/usr/share/qt4/mkspecs/qconfig.pri:<br/>
/usr/share/qt4/mkspecs/features/qt_functions.prf:<br/>
/usr/share/qt4/mkspecs/features/qt_config.prf:<br/>
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:<br/>
/usr/share/qt4/mkspecs/features/default_pre.prf:<br/>
/usr/share/qt4/mkspecs/features/debug.prf:<br/>
/usr/share/qt4/mkspecs/features/default_post.prf:<br/>
/usr/share/qt4/mkspecs/features/static.prf:<br/>
/usr/share/qt4/mkspecs/features/warn_on.prf:<br/>
/usr/share/qt4/mkspecs/features/resources.prf:<br/>
/usr/share/qt4/mkspecs/features/uic.prf:<br/>
/usr/share/qt4/mkspecs/features/yacc.prf:<br/>
/usr/share/qt4/mkspecs/features/lex.prf:<br/>
/usr/share/qt4/mkspecs/features/include_source_dir.prf:<br/>
qmake:&nbsp;&nbsp;FORCE<br/>
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile ../source/CppHelloBoostQtCreatorUbuntuNds.pro<br/>
<br/>
dist: <br/>
	@$(CHK_DIR_EXISTS) ../source/.tmp/CppHelloBoostQtCreatorUbuntuNds1.0.0 || $(MKDIR) ../source/.tmp/CppHelloBoostQtCreatorUbuntuNds1.0.0 <br/>
	$(COPY_FILE) --parents $(SOURCES) $(DIST) ../source/.tmp/CppHelloBoostQtCreatorUbuntuNds1.0.0/ &amp;&amp; (cd `dirname ../source/.tmp/CppHelloBoostQtCreatorUbuntuNds1.0.0` &amp;&amp; $(TAR) CppHelloBoostQtCreatorUbuntuNds1.0.0.tar CppHelloBoostQtCreatorUbuntuNds1.0.0 &amp;&amp; $(COMPRESS) CppHelloBoostQtCreatorUbuntuNds1.0.0.tar) &amp;&amp; $(MOVE) `dirname ../source/.tmp/CppHelloBoostQtCreatorUbuntuNds1.0.0`/CppHelloBoostQtCreatorUbuntuNds1.0.0.tar.gz . &amp;&amp; $(DEL_FILE) -r ../source/.tmp/CppHelloBoostQtCreatorUbuntuNds1.0.0<br/>
<br/>
<br/>
clean:compiler_clean <br/>
	-$(DEL_FILE) $(OBJECTS)<br/>
	-$(DEL_FILE) *~ core *.core<br/>
<br/>
<br/>
####### Sub-libraries<br/>
<br/>
distclean: clean<br/>
	-$(DEL_FILE) $(TARGET) <br/>
	-$(DEL_FILE) Makefile<br/>
<br/>
<br/>
compiler_rcc_make_all:<br/>
compiler_rcc_clean:<br/>
compiler_uic_make_all:<br/>
compiler_uic_clean:<br/>
compiler_image_collection_make_all: qmake_image_collection.cpp<br/>
compiler_image_collection_clean:<br/>
	-$(DEL_FILE) qmake_image_collection.cpp<br/>
compiler_yacc_decl_make_all:<br/>
compiler_yacc_decl_clean:<br/>
compiler_yacc_impl_make_all:<br/>
compiler_yacc_impl_clean:<br/>
compiler_lex_make_all:<br/>
compiler_lex_clean:<br/>
compiler_clean: <br/>
<br/>
####### Compile<br/>
<br/>
main.o: ../source/main.cpp <br/>
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o ../source/main.cpp<br/>
<br/>
####### Install<br/>
<br/>
install:&nbsp;&nbsp; FORCE<br/>
<br/>
uninstall:&nbsp;&nbsp; FORCE<br/>
<br/>
FORCE:<br/>
<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/regex.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;nds.h&gt;<br/>
	<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>consoleDemoInit is obligatory<br/>
&nbsp;&nbsp;consoleDemoInit();<br/>
<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Hello World";<br/>
&nbsp;&nbsp;s <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::regex_replace(s,<a href="CppBoostRegex.htm">boost::regex</a>("World"),<a href="CppString.htm">std::string</a>("<a href="CppBoost.htm">Boost</a>"));<br/>
&nbsp;&nbsp;<a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Infinite waiting<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (1) {}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Process</h2>
<p>&nbsp;</p>
<p>The project yielded this error in two ways:</p>
<ol>
  <li>Doing a command-line <a href="CppMake.htm">make</a></li>
  <li>Running the program from <a href="CppQtCreator.htm">Qt Creator</a></li>
</ol>
<p>&nbsp;</p>
<p>Hypothesis: arm-eabi (version 4.5.0) cannot compile this Boost library?</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
