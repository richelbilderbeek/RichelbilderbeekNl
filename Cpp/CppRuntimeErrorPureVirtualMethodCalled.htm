<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>pure virtual method called</title>
  <meta name="description" content="C++ pure virtual method called"/>
  <meta name="keywords" content="C++ pure virtual method called code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppRuntimeErrorPureVirtualMethodCalled.htm">pure virtual method called</a></h1>
<p>&nbsp;</p>
<p><a href="CppRuntimeErrorPureVirtualMethodCalled.htm">pure virtual method called</a> is a <a href="CppRuntimeError.htm">runtime error</a>.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppRuntimeErrorPureVirtualMethodCalled.zip">Download the Qt Creator project 'CppRuntimeErrorPureVirtualMethodCalled' (zip)</a></li>
  <li><a href="CppRuntimeErrorPureVirtualMethodCalled.png">View the 'CppRuntimeErrorPureVirtualMethodCalled' program flow (png)</a></li>
</ul>
<p>&nbsp;</p>
<p>Below I posted code to reproduce the error, which I adapted from [1]. Also from [1]: 'So whatâ€™s the moral of the story? If you ever see 
the error message pure virtual method called / terminate called without an active exception, check your object lifetimes! You may be trying to call 
members on a destructing (and thus incomplete) object'.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 11.04 (natty)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> 2.0.1</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.5.2</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.5.2</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: CppPureVirtualMethodCalled.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
#-------------------------------------------------<br/>
#<br/>
# Project created by <a href="CppQtCreator.htm">QtCreator</a> 2011-08-04T10:58:45<br/>
#<br/>
#-------------------------------------------------<br/>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += core<br/>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -= gui<br/>
QMAKE_CXXFLAGS += -std=<a href="Cpp0x.htm">c++0x</a><br/>
TARGET = CppPureVirtualMethodCal<a href="CppLed.htm">led</a><br/>
CONFIG&nbsp;&nbsp; += console<br/>
CONFIG&nbsp;&nbsp; -= app_bundle<br/>
TEMPLATE = app<br/>
SOURCES += <a href="CppMain.htm">main</a>.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppThread.htm">thread</a>&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Base<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~Base() { sleep(1); }<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> DoIt() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Derived : <b><a href="CppPublic.htm">public</a></b> Base<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~Derived() { }<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> DoIt() <b><a href="CppConst.htm">const</a></b> { }<br/>
};<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> Task(<b><a href="CppConst.htm">const</a></b> <b><a href="CppVoid.htm">void</a></b>* <b><a href="CppConst.htm">const</a></b> p)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Base * <b><a href="CppConst.htm">const</a></b> b <a href="CppOperatorAssign.htm">=</a> <b><a href="CppReinterpret_cast.htm">reinterpret_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> Base*&gt;(p);<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (1) b-&gt;DoIt();<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Base * <b><a href="CppConst.htm">const</a></b> b <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> Derived();<br/>
&nbsp;&nbsp;<a href="CppThread.htm">std::thread</a> t(Task,b);<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> b;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Screen output</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
pure virtual method called<br/>
terminate called without an active exception<br/>
The program has unexpectedly finished.<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Program flow</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="CppRuntimeErrorPureVirtualMethodCalled.png">View the 'CppRuntimeErrorPureVirtualMethodCalled' program flow (png)</a></li>
</ul>
<p>&nbsp;</p>
<p>The program flow can be seen in the (png) picture above. Not how first the <a href="CppInstance.htm">instance</a> is 
<a href="CppDelete.htm">deleted</a>m before the <a href="CppThread.htm">thread</a> starts working with it.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></li>
<p>&nbsp;</p>
<ol>
  <li><a href="http://tombarta.wordpress.com/2008/07/10/gcc-pure-virtual-method-called">Software Architecture blog</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>

