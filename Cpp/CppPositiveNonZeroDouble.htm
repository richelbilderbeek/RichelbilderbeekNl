<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>PositiveNonZeroDouble</title>
  <meta name="description" content="C++ PositiveNonZeroDouble"/>
  <meta name="keywords" content="C++ PositiveNonZeroDouble "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppPositiveNonZeroDouble.htm">PositiveNonZeroDouble</a></h1>
<p>&nbsp;</p>
<!-- No CodeToHtmlInfo about this class with page name CppPositiveNonZeroDouble-->
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppPositiveNonZeroDouble/CppPositiveNonZeroDouble.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppPositiveNonZeroDouble/CppPositiveNonZeroDouble.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppPositiveNonZeroDouble.htm">CppPositiveNonZeroDouble</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppPositiveNonZeroDouble.htm">CppPositiveNonZeroDouble</a>/positivenonzerodouble.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppPositiveNonZeroDouble.htm">CppPositiveNonZeroDouble</a>/positivenonzerodouble.h<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppPositiveNonZeroDouble.htm">CppPositiveNonZeroDouble</a>/Licence.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppPositiveNonZeroDouble/positivenonzerodouble.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppPositiveNonZeroDouble/positivenonzerodouble.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> POSITIVENONZERODOUBLE_H<br/>
<a href="CppDefine.htm">#define</a> POSITIVENONZERODOUBLE_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppComment.htm">///</a>Only allows values that are positive and non-zero<br/>
<b><a href="CppStruct.htm">struct</a></b> PositiveNonZero<a href="CppDouble.htm">Double</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Throws <a href="CppStdLogic_error.htm">std::logic_error</a> <b><a href="CppIf.htm">if</a></b> x is zero or negative<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> PositiveNonZero<a href="CppDouble.htm">Double</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x);<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> Get() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_x; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> m_x;<br/>
};<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> PositiveNonZero<a href="CppDouble.htm">Double</a> d);<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> POSITIVENONZERODOUBLE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./CppPositiveNonZeroDouble/positivenonzerodouble.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./CppPositiveNonZeroDouble/positivenonzerodouble.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> "positivenonzero<b><a href="CppDouble.htm">double</a></b>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppComment.htm">///</a>Throws <a href="CppStdLogic_error.htm">std::logic_error</a> <b><a href="CppIf.htm">if</a></b> x is zero or negative<br/>
PositiveNonZero<a href="CppDouble.htm">Double</a>::PositiveNonZero<a href="CppDouble.htm">Double</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x)<br/>
&nbsp;&nbsp;: m_x{x}<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x <a href="CppOperatorLessEqual.htm">&lt;=</a> 0.0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStdStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="Cpp__func__.htm">__func__</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ": x must be non-zero and positive, x given: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppStdLogic_error.htm">std::logic_error</a>(s.str());<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<br/>
<a href="CppStdOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppStdOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> PositiveNonZero<a href="CppDouble.htm">Double</a> d)<br/>
{<br/>
&nbsp;&nbsp;os <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> d.Get();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> os;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
